services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      - "--entrypoints.web.address=:81"
    ports:
      # The HTTP port
      - "81:81"
      # The HTTPS port
      # - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8189:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # volume to store letsencrypt certificates
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik

  postgres:
    image: postgres:15.12-bookworm
    container_name: postgres
    restart: unless-stopped
    networks: [traefik]
    ports: ["5433:5432"]
    environment:
      - POSTGRES_DB=${DATAVERSE_DB_NAME}
      - POSTGRES_USER=${DATAVERSE_DB_USER}
      - POSTGRES_PASSWORD=${DATAVERSE_DB_PASSWORD}
    env_file: [.env]
    volumes:
      - ./database-data:/var/lib/postgresql/data
      - ./triggers:/triggers
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATAVERSE_DB_USER} -d ${DATAVERSE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  solr:
    image: rudi/dataverse-solr-65
    container_name: solr
    privileged: true
    networks: [traefik]
    ports: ["8983:8983"]
    environment:
      - SOLR_PORT=8983
      - SOLR_JAVA_MEM=-Xms1g -Xmx1g
      - SOLR_OPTS=-Dlog4j2.formatMsgNoLookups=true -Dsolr.jetty.request.header.size=65535
    env_file: [.env]
    volumes:
      - ./solr-data:/var/solr/data
      - ./solr-tmp:/var/tmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.solr.rule=Host(`solr.${traefikhost}`)"
      - "traefik.http.routers.solr.entrypoints=web"
      - "traefik.http.services.solr.loadbalancer.server.port=8983"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8983/solr/admin/info/system || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  ns:
    networks:
      - traefik
    image: coronawhy/semantic-gateway
    container_name: namespaces
    ports:
      - "8002:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns.rule=Host(`ns.${traefikhost}`)"

  nde:
    networks:
      - traefik
    image: coronawhy/nde
    container_name: nde
    ports:
      - "8003:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nde.rule=Host(`nde.${traefikhost}`)"
      - "traefik.http.services.nde.loadbalancer.server.port=8080"

  whoami:
    networks:
      - traefik
    image: "containous/whoami"
    container_name: "whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${traefikhost}`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

  dataverse:
    image: rudi/dataverse-65
    container_name: dataverse
    privileged: true
    user: "root"
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
    networks: [traefik]
    ports:
      - "4848:4848"
      - "8095:8080"  # direct access (bypass Traefik)
      - "8009:8009"
      - "8181:8181"
    environment:
      - ADMIN_USER=${ADMIN_USER:-dataverseAdmin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@localhost}
      - DATAVERSE_DB_HOST=postgres
      - DATAVERSE_DB_PORT=5432
      - DATAVERSE_DB_USER=${DATAVERSE_DB_USER}
      - DATAVERSE_DB_PASSWORD=${DATAVERSE_DB_PASSWORD}
      - DATAVERSE_DB_NAME=${DATAVERSE_DB_NAME}
      - SOLR_LOCATION=solr:8983
      - SOLR_HOST=solr
      - SOLR_PORT=8983
      - LANG=en
      - MAINLANG=fr
      - dataverse_files_storage-driver-id=file
      - dataverse_files_file_type=file
      - dataverse_files_file_directory=/data
      # Database connection variables
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${DATAVERSE_DB_NAME}
      - POSTGRES_USER=${DATAVERSE_DB_USER}
      - POSTGRES_PASSWORD=${DATAVERSE_DB_PASSWORD}
      - DATAVERSE_SOLR_HOST=solr
      - DATAVERSE_SOLR_PORT=8983
      - DATAVERSE_SOLR_CORE=collection1
      - DATAVERSE_SOLR_PROTOCOL=http     
    env_file: [.env]
    volumes:
      - ./dataverse-files:/data
      - ./dataverse-deploy:/opt/payara/appserver/glassfish/domains/domain1/autodeploy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dataverse.rule=Host(`dv.${traefikhost}`)"
      - "traefik.http.routers.dataverse.entrypoints=web"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 300s

volumes:
  database-data:
  solr-data:
  dataverse-data:

networks:
  traefik:
    external: true