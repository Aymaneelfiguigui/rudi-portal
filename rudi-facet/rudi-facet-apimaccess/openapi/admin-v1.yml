---
swagger: "2.0"
info:
  description: "This document specifies a **RESTful API** for WSO2 **API Manager**\
    \ - Admin Portal.\nPlease see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.5.176/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/resources/admin-api.yaml)\
    \ of the API which is written using [swagger 2.0](http://swagger.io/) specification.\n"
  version: "v1.2"
  title: "WSO2 API Manager - Admin"
  contact:
    name: "WSO2"
    url: "http://wso2.com/products/api-manager/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "apis.wso2.com"
basePath: "/api/am/admin/v1"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /throttling/policies/application:
    get:
      tags:
        - "Application Policy (Collection)"
      summary: "Get all Application Throttling Policies"
      description: "Retrieves all existing application throttling policies.\n"
      parameters:
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicies returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource. Used by caches, or\
                \ in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicyList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    post:
      tags:
        - "Application Policy (Collection)"
      summary: "Add an Application Throttling Policy"
      description: "This operation can be used to add a new application level throttling\
        \ policy.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Application level policy object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\nLocation header contains URL of newly created\
            \ entity.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created Policy object.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "415":
          description: "Unsupported media type.\nThe entity of the request was in\
            \ a not supported format.\n"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /throttling/policies/application/{policyId}:
    get:
      tags:
        - "Application Policy (Individual)"
      summary: "Get an Application Policy"
      description: "Retrieves an Application Policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicy"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Tier does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    put:
      tags:
        - "Application Policy (Individual)"
      summary: "Update an Application Throttling policy"
      description: "Updates an existing Application level throttling policy. Upon\
        \ succesfull, you will receive the updated application policy as the response.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Policy object that needs to be modified\n"
          required: true
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy updated.\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional request.\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional reuquests.\n"
          schema:
            $ref: "#/definitions/ApplicationThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
    delete:
      tags:
        - "Application Policy (Individual)"
      summary: "Delete an Application Throttling policy"
      description: "Deletes an Application level throttling policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /policies/mediation:
    get:
      tags:
        - "Mediation Policy (Collection)"
      summary: "Get all global mediation policies\n"
      description: "This operation provides you a list of available all global level\
        \ mediation policies.\n"
      parameters:
        - name: "limit"
          in: "query"
          description: "Maximum size of resource array to return.\n"
          required: false
          type: "integer"
          default: 25
        - name: "offset"
          in: "query"
          description: "Starting point within the complete list of items qualified.\n"
          required: false
          type: "integer"
          default: 0
        - name: "query"
          in: "query"
          description: "-Not supported yet-"
          required: false
          type: "string"
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nList of mediation policies is returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body."
            ETag:
              type: "string"
              description: "Entity Tag of the response resource. Used by caches, or\
                \ in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/mediationList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:mediation_policy_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 36a1644d-16c8-3f10-af2a-cedac82a6f21\"\
        \ https://localhost:9443/api/am/admin/v1/policies/mediation"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/policies/mediation\r\
        \nAuthorization: Bearer 36a1644d-16c8-3f10-af2a-cedac82a6f21"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n   \"count\": 13,\r\n   \"next\": null,\r\n   \"previous\": null,\r\n\
        \   \"list\":    [\r\n            {\r\n         \"name\": \"debug_json_fault\"\
        ,\r\n         \"id\": \"563de8f3-dd1d-4ec7-afc2-d158c663ed34\",\r\n      \
        \   \"type\": \"fault\"\r\n      },\r\n            {\r\n         \"name\"\
        : \"json_fault\",\r\n         \"id\": \"f9c36f4d-a2b6-41e7-b311-d358a47916be\"\
        ,\r\n         \"type\": \"fault\"\r\n      },\r\n            {\r\n       \
        \  \"name\": \"debug_json_fault2\",\r\n         \"id\": \"378169d3-6fd2-427f-b0db-0f378e89ccea\"\
        ,\r\n         \"type\": \"fault\"\r\n      },\r\n            {\r\n       \
        \  \"name\": \"json_to_xml_in_message\",\r\n         \"id\": \"3921225b-7918-4b95-a851-22c4e4e3e911\"\
        ,\r\n         \"type\": \"in\"\r\n      },\r\n            {\r\n         \"\
        name\": \"debug_in_flow\",\r\n         \"id\": \"2bc15f93-4455-4763-89b8-83600fb9d731\"\
        ,\r\n         \"type\": \"in\"\r\n      },\r\n            {\r\n         \"\
        name\": \"log_in_message\",\r\n         \"id\": \"4d287cca-76ab-44ca-b22e-919fc27c50e3\"\
        ,\r\n         \"type\": \"in\"\r\n      },\r\n            {\r\n         \"\
        name\": \"preserve_accept_header\",\r\n         \"id\": \"3776b215-b3bc-40b6-bdcb-06efa7de64be\"\
        ,\r\n         \"type\": \"in\"\r\n      },\r\n            {\r\n         \"\
        name\": \"xml_to_json_in_message\",\r\n         \"id\": \"50ac2002-769e-4f90-8549-6d0248dff7d2\"\
        ,\r\n         \"type\": \"in\"\r\n      },\r\n            {\r\n         \"\
        name\": \"xml_to_json_out_message\",\r\n         \"id\": \"2af75853-ed75-4d25-81aa-0ebbeca691ea\"\
        ,\r\n         \"type\": \"out\"\r\n      },\r\n            {\r\n         \"\
        name\": \"json_to_xml_out_message\",\r\n         \"id\": \"d9fa3ffc-f6b6-4171-ab97-eb44196cb66e\"\
        ,\r\n         \"type\": \"out\"\r\n      },\r\n            {\r\n         \"\
        name\": \"debug_out_flow\",\r\n         \"id\": \"260b7701-4071-46bd-9b66-900ac6fffed6\"\
        ,\r\n         \"type\": \"out\"\r\n      },\r\n            {\r\n         \"\
        name\": \"apply_accept_header\",\r\n         \"id\": \"15c17c2f-33e3-4c37-a262-04dfa49983a4\"\
        ,\r\n         \"type\": \"out\"\r\n      },\r\n            {\r\n         \"\
        name\": \"log_out_message\",\r\n         \"id\": \"d37dca41-c048-492a-82cf-9a2292c6fff0\"\
        ,\r\n         \"type\": \"out\"\r\n      }\r\n   ]\r\n}"
    post:
      tags:
        - "Mediation Policy (Collection)"
      summary: "Add a global mediation policy"
      description: "This operation can be used to add a new global mediation policy.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "mediation policy to upload"
          required: true
          schema:
            $ref: "#/definitions/Mediation"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nMediation policy added successfully.\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the uploaded thumbnail image of the API.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Mediation"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:mediation_policy_create"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 45c1e774-7d5a-3e2a-b76c-53f786efac6b\"\
        \ -H \"Content-Type: application/json\" -X POST -d @data.json \"https://localhost:9443/api/am/admin/v1/policies/mediation\""
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/policies/mediation\r\
        \nContent-Type: application/json\r\nAuthorization: Bearer 45c1e774-7d5a-3e2a-b76c-53f786efac6b\r\
        \n\r\n{\r\n   \"name\": \"add_custom_header_fault\",\r\n   \"type\": \"fault\"\
        ,\r\n   \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\
        \" name=\\\"add_custom_header_fault\\\">\\n    <property name=\\\"CustomHeader\\\
        \" scope=\\\"transport\\\" value=\\\"example\\\"/>\\n<\\/sequence>\\n\"\r\n\
        }"
      x-wso2-response: "HTTP/1.1 201 Created\r\nLocation: https://localhost:9443/api/am/admin/v1/registry/resource/_system/governance/apimgt/customsequences/fault/add_custom_header_fault.xml\r\
        \nContent-Type: application/json\r\n\r\n{\r\n   \"id\": \"2e5cebbb-e48c-4345-a912-1f0a2058aa05\"\
        ,\r\n   \"name\": \"add_custom_header_fault\",\r\n   \"type\": \"fault\",\r\
        \n   \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\"\
        \ name=\\\"add_custom_header_fault\\\">\\n    <property name=\\\"CustomHeader\\\
        \" scope=\\\"transport\\\" value=\\\"example\\\"/>\\n<\\/sequence>\\n\"\r\n\
        }"
  /policies/mediation/{mediationPolicyId}:
    get:
      tags:
        - "Mediation Policy (Individual)"
      summary: "Get a global mediation policy"
      description: "This operation can be used to retrieve a particular global mediation\
        \ policy.\n"
      parameters:
        - name: "mediationPolicyId"
          in: "path"
          description: "Mediation policy Id\n"
          required: true
          type: "string"
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nMediation Policy returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Mediation"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Document does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:mediation_policy_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer da3b0521-5adb-3edc-8ab9-295b4c34c809\"\
        \ https://localhost:9443/api/am/admin/v1/policies/mediation/2e5cebbb-e48c-4345-a912-1f0a2058aa05"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/policies/mediation/2e5cebbb-e48c-4345-a912-1f0a2058aa05\n\
        Authorization: Bearer da3b0521-5adb-3edc-8ab9-295b4c34c809"
      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"\
        id\": \"2e5cebbb-e48c-4345-a912-1f0a2058aa05\",\n   \"name\": \"add_custom_header_fault\"\
        ,\n   \"type\": \"fault\",\n   \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\
        \" name=\\\"add_custom_header_fault\\\">\\n    <property name=\\\"CustomHeader\\\
        \" scope=\\\"transport\\\" value=\\\"example\\\"/>\\n<\\/sequence>\\n\"\n}"
    put:
      tags:
        - "Mediation Policy (Individual)"
      summary: "Update a global mediation policy"
      description: "This operation can be used to update an existing global mediation\
        \ policy.\n"
      parameters:
        - name: "mediationPolicyId"
          in: "path"
          description: "Mediation policy Id\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Mediation policy object that needs to be added\n"
          required: true
          schema:
            $ref: "#/definitions/Mediation"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nSuccessful response with updated mediation policy object\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource. Used by caches, or\
                \ in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Mediation"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Forbidden.\nThe request must be conditional but no condition\
            \ has been specified.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:mediation_policy_create"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 58b3b072-74bb-3381-a213-ce1ca2857c2f\"\
        \ -H \"Content-Type: application/json\" -X PUT -d @data.json https://localhost:9443/api/am/admin/v1/policies/mediation/8242d72c-b7d7-4b51-9098-d24bd4a5ea3a"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v1/policies/mediation/76cc38e4-f41a-457a-a987-3a677c290dc6\n\
        Content-Type: application/json\nAuthorization: Bearer 58b3b072-74bb-3381-a213-ce1ca2857c2f\n\
        \n{\n   \"name\": \"add_custom_header_fault\",\n   \"type\": \"fault\",\n\
        \   \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\"\
        \ name=\\\"add_custom_header_fault\\\">\\n    <property name=\\\"CustomHeader\\\
        \" scope=\\\"transport\\\" value=\\\"example\\\"/>\\n<\\/sequence>\\n\"\n\
        }\n"
      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"\
        id\": \"8242d72c-b7d7-4b51-9098-d24bd4a5ea3a\",\n   \"name\": \"add_custom_header_fault\"\
        ,\n   \"type\": \"fault\",\n   \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\
        \" name=\\\"add_custom_header_fault\\\">\\n    <property name=\\\"CustomHeader\\\
        \" scope=\\\"transport\\\" value=\\\"example\\\"/>\\n<\\/sequence>\\n\"\n}"
    delete:
      tags:
        - "Mediation Policy (Individual)"
      summary: "Delete a global mediation policy"
      description: "This operation can be used to delete an existing global mediation\
        \ policy providing the Id of the mediation policy.\n"
      parameters:
        - name: "mediationPolicyId"
          in: "path"
          description: "Mediation policy Id\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nMediation policy successfully deleted.\n"
        "403":
          description: "Forbidden.\nThe request must be conditional but no condition\
            \ has been specified.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:mediation_policy_create"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer fb2a0784-f60c-3276-8fde-5b0f70e61ecc\"\
        \ -X DELETE https://localhost:9443/api/am/admin/v1/policies/mediation/2c85844c-588f-4000-9ce5-f4cdc422cc8b"
      x-wso2-request: "DELETE https://localhost:9443/api/am/admin/v1/policies/mediation/2c85844c-588f-4000-9ce5-f4cdc422cc8b\n\
        Content-Type: application/json\nAuthorization: Bearer 58b3b072-74bb-3381-a213-ce1ca2857c2f"
      x-wso2-response: "HTTP/1.1 200 OK"
  /throttling/policies/subscription:
    get:
      tags:
        - "Subscription Policy (Collection)"
      summary: "Get all Subscription Throttling Policies"
      description: "This operation can be used to retrieve all Subscription level\
        \ throttling policies.\n"
      parameters:
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicies returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicyList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    post:
      tags:
        - "Subscription Policy (Collection)"
      summary: "Add a Subscription Throttling Policy"
      description: "This operation can be used to add a Subscription level throttling\
        \ policy specifying the details of the policy in the payload.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Subscripion level policy object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\nLocation header contains URL of newly created\
            \ entity.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created Policy object.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "415":
          description: "Unsupported media type.\nThe entity of the request was in\
            \ a not supported format.\n"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /throttling/policies/subscription/{policyId}:
    get:
      tags:
        - "Subscription Policy (Individual)"
      summary: "Get a Subscription Policy"
      description: "Retrieve a single subscription-level throttling policy. We should\
        \ provide the Id of the policy as a path parameter.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicy"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Policy does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    put:
      tags:
        - "Subscription Policy (Individual)"
      summary: "Update a Subscription Policy"
      description: "Updates an existing subscription-level throttling policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Policy object that needs to be modified\n"
          required: true
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy updated.\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/SubscriptionThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
    delete:
      tags:
        - "Subscription Policy (Individual)"
      summary: "Delete a Subscription Policy"
      description: "This operation can be used to delete a subscription-level throttling\
        \ policy specifying the Id of the policy as a path paramter.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /throttling/policies/custom:
    get:
      tags:
        - "Custom Rules (Collection)"
      summary: "Get all Custom Rules"
      description: "Retrieves all Custom Rules.\n\n**NOTE:**\n* Only super tenant\
        \ users are allowed for this operation.\n"
      parameters:
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicies returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/CustomRuleList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ https://localhost:9443/api/am/admin/v1/throttling/policies/custom"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/throttling/policies/custom\n\
        Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\n"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"count\": 1,\r\n  \"list\": [\r\n    {\r\n      \"policyId\": \"33662a62-8db1-4d75-af08-afd63c6bd0b4\"\
        ,\r\n      \"policyName\": \"custom1\",\r\n      \"displayName\": null,\r\n\
        \      \"description\": \"Allow 10 requests per minute for admin user\",\r\
        \n      \"isDeployed\": true,\r\n      \"siddhiQuery\": \"FROM RequestStream\\\
        nSELECT userId, ( userId == 'admin@carbon.super' ) AS isEligible , str:concat('admin@carbon.super','')\
        \ as throttleKey\\nINSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n    \
        \  \"keyTemplate\": \"$userId\"\r\n    }\r\n  ]\r\n}"
    post:
      tags:
        - "Custom Rules (Collection)"
      summary: "Add a Custom Rule"
      description: "Adds a new Custom Rule.\n\n**NOTE:**\n* Only super tenant users\
        \ are allowed for this operation.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Custom Rule object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/CustomRule"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\nLocation header contains URL of newly created\
            \ entity.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/CustomRule"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "415":
          description: "Unsupported media type.\nThe entity of the request was in\
            \ a not supported format.\n"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
      x-wso2-curl: "curl -k -X POST -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/throttling/policies/custom\
        \ -d @data.json"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/throttling/policies/custom\r\
        \nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type:\
        \ application/json\r\n\r\n{\r\n  \"policyName\": \"custom1\",\r\n  \"description\"\
        : \"Allow 10 requests per minute for admin user\",\r\n  \"siddhiQuery\": \"\
        FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super' ) AS\
        \ isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT\
        \ INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n  \"\
        keyTemplate\": \"$userId\"\r\n}"
      x-wso2-response: "HTTP/1.1 201 Created\r\nLocation: https://localhost:9443/api/am/admin/v1/throttling/policies/custom/22c71b7d-7013-4b80-bf7a-e86b471fb575\r\
        \nContent-Type: application/json\r\n\r\n{\r\n  \"policyId\": \"22c71b7d-7013-4b80-bf7a-e86b471fb575\"\
        ,\r\n  \"policyName\": \"custom1\",\r\n  \"displayName\": null,\r\n  \"description\"\
        : \"Allow 10 requests per minute for admin user\",\r\n  \"isDeployed\": true,\r\
        \n  \"siddhiQuery\": \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\
        \ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT\
        \ INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n  \"\
        keyTemplate\": \"$userId\"\r\n}"
  /throttling/policies/custom/{ruleId}:
    get:
      tags:
        - "Custom Rules (Individual)"
      summary: "Get a Custom Rule"
      description: "Retrieves a Custom Rule. We need to provide the policy Id as a\
        \ path parameter.\n\n**NOTE:**\n* Only super tenant users are allowed for\
        \ this operation.\n"
      parameters:
        - name: "ruleId"
          in: "path"
          description: "Custom rule UUID\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/CustomRule"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Policy does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\n\
        Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\n"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"policyId\": \"33662a62-8db1-4d75-af08-afd63c6bd0b4\",\r\n  \"policyName\"\
        : \"custom1\",\r\n  \"displayName\": null,\r\n  \"description\": \"Allow 10\
        \ requests per minute for admin user\",\r\n  \"isDeployed\": true,\r\n  \"\
        siddhiQuery\": \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\
        \ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT\
        \ INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n  \"\
        keyTemplate\": \"$userId\"\r\n}"
    put:
      tags:
        - "Custom Rules (Individual)"
      summary: "Update a Custom Rule"
      description: "Updates an existing Custom Rule.\n\n**NOTE:**\n* Only super tenant\
        \ users are allowed for this operation.\n"
      parameters:
        - name: "ruleId"
          in: "path"
          description: "Custom rule UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Policy object that needs to be modified\n"
          required: true
          schema:
            $ref: "#/definitions/CustomRule"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy updated.\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/CustomRule"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
      x-wso2-curl: "curl -k -X PUT -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\
        \ -d @data.json"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\r\
        \nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type:\
        \ application/json\r\n\r\n{\r\n  \"policyName\": \"custom1\",\r\n  \"description\"\
        : \"Allow 10 requests per minute for admin user\",\r\n  \"siddhiQuery\": \"\
        FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super' ) AS\
        \ isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT\
        \ INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n  \"\
        keyTemplate\": \"$userId\"\r\n}"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"policyId\": \"33662a62-8db1-4d75-af08-afd63c6bd0b4\",\r\n  \"policyName\"\
        : \"custom1\",\r\n  \"displayName\": null,\r\n  \"description\": \"Allow 10\
        \ requests per minute for admin user\",\r\n  \"isDeployed\": true,\r\n  \"\
        siddhiQuery\": \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\
        \ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT\
        \ INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
        \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
        \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\",\r\n  \"\
        keyTemplate\": \"$userId\"\r\n}"
    delete:
      tags:
        - "Custom Rules (Individual)"
      summary: "Delete a Custom Rule"
      description: "Delete a Custom Rule. We need to provide the Id of the policy\
        \ as a path parameter.\n\n**NOTE:**\n* Only super tenant users are allowed\
        \ for this operation.\n"
      parameters:
        - name: "ruleId"
          in: "path"
          description: "Custom rule UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
      x-wso2-curl: "curl -k -X DELETE -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4"
      x-wso2-request: "DELETE https://localhost:9443/api/am/admin/v1/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\n\
        Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\n"
      x-wso2-response: "HTTP/1.1 200 OK"
  /throttling/policies/advanced:
    get:
      tags:
        - "Advanced Policy (Collection)"
      summary: "Get all Advanced throttling policies."
      description: "Retrieves all existing Advanced level throttling policies.\n"
      parameters:
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicies returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicyList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    post:
      tags:
        - "Advanced Policy (Collection)"
      summary: "Add an Advanced Throttling Policy"
      description: "Add a new Advanced level throttling policy.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Advanced level policy object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\nLocation header contains URL of newly created\
            \ entity.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created Advanced Throttling Policy.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "415":
          description: "Unsupported media type.\nThe entity of the request was in\
            \ a not supported format.\n"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /throttling/policies/advanced/{policyId}:
    get:
      tags:
        - "Advanced Policy (Individual)"
      summary: "Get an Advanced Policy"
      description: "Retrieves an Advanced Policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicy"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Policy does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_view"
    put:
      tags:
        - "Advanced Policy (Individual)"
      summary: "Update an Advanced Throttling Policy"
      description: "Updates an existing Advanced level throttling policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Policy object that needs to be modified\n"
          required: true
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicy"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nPolicy updated.\n"
          headers:
            Location:
              type: "string"
              description: "The URL of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/AdvancedThrottlePolicy"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
    delete:
      tags:
        - "Advanced Policy (Individual)"
      summary: "Delete an Advanced Throttling Policy"
      description: "Deletes an Advanced level throttling policy.\n"
      parameters:
        - name: "policyId"
          in: "path"
          description: "Thorttle policy UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tier_manage"
  /throttling/blacklist:
    get:
      tags:
        - "Blacklist (Collection)"
      summary: "Get all blocking condtions"
      description: "Retrieves all existing blocking condtions.\n"
      parameters:
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nBlocking conditions returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/BlockingConditionList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bl_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\"\
        \ https://localhost:9443/api/am/admin/v1/throttling/blacklist"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/throttling/blacklist\n\
        Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\n"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"count\": 3,\r\n  \"list\": [\r\n    {\r\n      \"conditionId\": \"\
        0b65b686-841b-48eb-b4c2-427d24584d71\",\r\n      \"conditionType\": \"IP\"\
        ,\r\n      \"conditionValue\": \"127.0.0.332\",\r\n      \"conditionStatus\"\
        : \"true\"\r\n    },\r\n    {\r\n      \"conditionId\": \"3baa990c-f90b-4e3e-9db7-f29ee7f46f48\"\
        ,\r\n      \"conditionType\": \"IP\",\r\n      \"conditionValue\": \"localhost\"\
        ,\r\n      \"conditionStatus\": \"false\"\r\n    },\r\n    {\r\n      \"conditionId\"\
        : \"b513eb68-69e8-4c32-92cf-852c101363cf\",\r\n      \"conditionType\": \"\
        IP\",\r\n      \"conditionValue\": \"10.100.7.77\",\r\n      \"conditionStatus\"\
        : \"true\"\r\n    }\r\n  ]\r\n}"
    post:
      tags:
        - "Blacklist (Collection)"
      summary: "Add a Blocking condition"
      description: "Adds a new Blocking condition.\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Blocking condition object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/BlockingCondition"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\nLocation header contains URL of newly created\
            \ entity.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource.\n"
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/BlockingCondition"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "415":
          description: "Unsupported media type.\nThe entity of the request was in\
            \ a not supported format.\n"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bl_manage"
      x-wso2-curl: "curl -k -X POST -H \"Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/throttling/blacklist"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/throttling/blacklist\r\
        \nAuthorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\r\nContent-Type:\
        \ application/json\r\n\r\n{\r\n   \"conditionType\": \"IP\",\r\n   \"conditionValue\"\
        : \"10.100.7.77\",\r\n      \"conditionStatus\": \"false\"\r\n    }\r\n"
      x-wso2-response: "HTTP/1.1 201 Created\r\nLocation: https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363cf\r\
        \nContent-Type: application/json\r\n\r\n{\r\n  \"conditionId\": \"b513eb68-69e8-4c32-92cf-852c101363cf\"\
        ,\r\n  \"conditionType\": \"IP\",\r\n  \"conditionValue\": \"10.100.7.77\"\
        ,\r\n      \"conditionStatus\": \"false\"\r\n    }"
  /throttling/blacklist/{conditionId}:
    get:
      tags:
        - "Blacklist (Individual)"
      summary: "Get a Blocking Condition"
      description: "Retrieves a Blocking Condition providing the condition Id\n"
      parameters:
        - name: "conditionId"
          in: "path"
          description: "Blocking condition identifier\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "If-Modified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ of the\nformerly retrieved variant of the resource (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nCondition returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
            ETag:
              type: "string"
              description: "Entity Tag of the response resource.\nUsed by caches,\
                \ or in conditional requests (Will be supported in future).\n"
            Last-Modified:
              type: "string"
              description: "Date and time the resource has been modifed the last time.\n\
                Used by caches, or in conditional requests (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/BlockingCondition"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "404":
          description: "Not Found.\nRequested Condition does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bl_view"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\"\
        \ https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363c"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363c\n\
        Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\n"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"conditionId\": \"b513eb68-69e8-4c32-92cf-852c101363cf\",\r\n  \"\
        conditionType\": \"IP\",\r\n  \"conditionValue\": \"10.100.7.77\"\r\n}"
    delete:
      tags:
        - "Blacklist (Individual)"
      summary: "Delete a Blocking condition"
      description: "Deletes an existing Blocking condition\n"
      parameters:
        - name: "conditionId"
          in: "path"
          description: "Blocking condition identifier\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met (Will be supported in future).\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bl_manage"
      x-wso2-curl: "curl -k -X DELETE -H \"Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363cf"
      x-wso2-request: "DELETE https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363cf\n\
        Authorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\n"
      x-wso2-response: "HTTP/1.1 200 OK"
    patch:
      tags:
        - "Blacklist (Individual)"
      summary: "Update a blocking condition"
      description: "Update a blocking condition by Id\n"
      parameters:
        - name: "conditionId"
          in: "path"
          description: "Blocking condition identifier\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Blocking condition with updated status\n"
          required: true
          schema:
            $ref: "#/definitions/BlockingConditionStatus"
        - name: "Content-Type"
          in: "header"
          description: "Media type of the entity in the body. Default is application/json.\n"
          required: true
          type: "string"
          default: "application/json"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully updated.\n"
          schema:
            $ref: "#/definitions/BlockingCondition"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nResource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bl_manage"
      x-wso2-curl: "curl -k -X PATCH -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363cf\
        \ -d @data.json"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v1/throttling/blacklist/b513eb68-69e8-4c32-92cf-852c101363cf\r\
        \nAuthorization: Bearer a1e3951b-a15c-3d79-a15b-99f1d612843e\r\nContent-Type:\
        \ application/json\r\n\r\n{\r\n    \"conditionStatus\": \"true\"\r\n    }\r\
        \n"
      x-wso2-response: "HTTP/1.1 200 Ok\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"conditionId\": \"b513eb68-69e8-4c32-92cf-852c101363cf\",\r\n  \"\
        conditionType\": \"IP\",\r\n  \"conditionValue\": \"10.100.7.77\",\r\n   \
        \   \"conditionStatus\": \"true\"\r\n    }"
  /applications:
    get:
      tags:
        - "Application (Collection)"
      summary: "Retrieve/Search applications\n"
      description: "This operation can be used to retrieve list of applications that\
        \ is belonged to the given user, If no user\nis provided then the application\
        \ for the user associated with the provided access token will be returned.\n"
      parameters:
        - name: "user"
          in: "query"
          description: "username of the application creator\n"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          description: "Maximum size of resource array to return.\n"
          required: false
          type: "integer"
          default: 25
        - name: "offset"
          in: "query"
          description: "Starting point within the complete list of items qualified.\n"
          required: false
          type: "integer"
          default: 0
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "name"
          in: "query"
          description: "Application Name\n"
          required: false
          type: "string"
        - name: "tenantDomain"
          in: "query"
          description: "Tenant domain of the applications to get. This has to be specified\
          \ only if require to get applications of\nanother tenant other than the\
          \ requester's tenant. So, if not specified, the default will be set as the\n\
          requester's tenant domain. This cross tenant Application access is allowed\
          \ only for super tenant admin\nusers only at a migration process.\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nApplication list returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/ApplicationList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:app_owner_change"
            - "apim:app_import_export"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/applications\nAuthorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ \"https://localhost:9443/api/am/admin/v1/applications\""
      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"\
        previous\": \"\",\n   \"list\":    [\n            {\n         \"groupId\"\
        : \"\",\n         \"owner\": \"admin\",\n           \"applicationId\": \"\
        367a2361-8db5-4140-8133-c6c8dc7fa0c4\",\n         \"status\": \"APPROVED\"\
        ,\n         \"name\": \"app1\"\n      },\n            {\n         \"groupId\"\
        : \"\",\n         \"owner\": \"admin\",\n             \"applicationId\": \"\
        896658a0-b4ee-4535-bbfa-806c894a4015\",\n          \"status\": \"APPROVED\"\
        ,\n         \"name\": \"DefaultApplication\"\n      }\n   ],\n   \"count\"\
        : 2,\n   \"next\": \"\"\n}"
  /applications/{applicationId}:
    delete:
      tags:
        - "Applications"
      summary: "Remove an application\n"
      description: "This operation can be used to remove an application specifying\
        \ its id.\n"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nResource successfully deleted.\n"
        "202":
          description: "Accepted.\nThe request has been accepted.\n"
          headers:
            Location:
              type: "string"
              description: "Location of the existing Application.\n"
          schema:
            $ref: "#/definitions/WorkflowResponse"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:app_import_export"
  /applications/{applicationId}/change-owner:
    post:
      tags:
        - "Application"
      summary: "Change Application Owner"
      description: "This operation is used to change the owner of an Application.\n\
        In order to change the owner of an application, we need to pass the new application\
        \ owner as a query parameter\n"
      parameters:
        - name: "owner"
          in: "query"
          required: true
          type: "string"
        - name: "applicationId"
          in: "path"
          description: "Application UUID\n"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nApplication owner changed successfully.\n"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested Application does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "Precondition Failed.\nThe request has not been performed because\
            \ one of the preconditions is not met.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:app_owner_change"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -X POST \"https://localhost:9443/api/am/admin/v1/applications/890a4f4d-09eb-4877-a323-57f6ce2ed79b/change-owner?owner=admin\""
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/apis/change-owner?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b&action=Publish\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK"
  /export/applications:
    get:
      tags:
        - "Application (Individual)"
      summary: "Export an Application"
      description: "This operation can be used to export the details of a particular\
        \ Application as a zip file.\n"
      produces:
        - "application/json"
        - "application/zip"
      parameters:
        - name: "appName"
          in: "query"
          description: "Application Name\n"
          required: true
          type: "string"
        - name: "appOwner"
          in: "query"
          description: "Owner of the Application\n"
          required: true
          type: "string"
        - name: "withKeys"
          in: "query"
          description: "Export application keys\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK.\nExport Successful.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            type: "file"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested Application does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:app_import_export"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -X GET https://localhost:9443/api/am/admin/v1/export/applications?appName=sampleApp&appOwner=admin\
        \ > admin_sampleApp.zip"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/export/applications?appName=sampleApp&appOwner=admin\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK\n Connection: keep-alive\n  Content-Disposition:\
        \ attachment; filename=\"exported-application.zip\"\n  Content-Type: application/zip"
  /import/applications:
    post:
      tags:
        - "Application (Individual)"
      summary: "Import an Application"
      description: "This operation can be used to import an Application.\n"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "file"
          in: "formData"
          description: "Zip archive consisting of exported Application Configuration.\n"
          required: true
          type: "file"
        - name: "preserveOwner"
          in: "query"
          description: "Preserve Original Creator of the Application\n"
          required: false
          type: "boolean"
        - name: "skipSubscriptions"
          in: "query"
          description: "Skip importing Subscriptions of the Application\n"
          required: false
          type: "boolean"
        - name: "appOwner"
          in: "query"
          description: "Expected Owner of the Application in the Import Environment\n"
          required: false
          type: "string"
        - name: "skipApplicationKeys"
          in: "query"
          description: "Skip importing Keys of the Application\n"
          required: false
          type: "boolean"
        - name: "update"
          in: "query"
          description: "Update if application exists\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK.\nSuccessful response with the updated object information\
            \ as entity in the body.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/ApplicationInfo"
        "207":
          description: "Multi Status.\nPartially successful response with skipped\
            \ APIs information object as entity in the body.\n"
          schema:
            $ref: "#/definitions/APIInfoList"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:app_import_export"
      x-wso2-curl: "curl -k -F \"file=@exported.zip\" -X POST -H \"Authorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9443/api/am/admin/v1/import/applications"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/import/applications\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 201 Created\nLocation: https://localhost:9443/api/am/admin/v1/applications/c30f3a6e-ffa4-4ae7-afce-224d1f820524\n\
        Content-Type: application/json\n\n{\n   \"groupId\": \"\",\n   \"callbackUrl\"\
        : \"http://my.server.com/callback\",\n   \"owner\": \"admin\",\n   \"applicationId\"\
        : \"c30f3a6e-ffa4-4ae7-afce-224d1f820524\",\n   \"status\": \"APPROVED\",\n\
        \   \"name\": \"sampleapp\" \n}"
  /import/api:
    post:
      tags:
        - "API (Individual)"
      summary: "Import an API"
      description: "This operation can be used to import an API.\n"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "file"
          in: "formData"
          description: "Zip archive consisting on exported api configuration\n"
          required: true
          type: "file"
        - name: "preserveProvider"
          in: "query"
          description: "Preserve Original Provider of the API. This is the user choice\
          \ to keep or replace the API provider.\n"
          required: false
          type: "boolean"
        - name: "overwrite"
          in: "query"
          description: "Whether to update the API or not. This is used when updating\
          \ already existing APIs.\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "Created.\nAPI Imported Successfully.\n"
        "403":
          description: "Forbidden\nNot Authorized to import.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested API to update not found.\n"
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: "Conflict.\nAPI to import already exists.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nError in importing API.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_import_export"
      x-wso2-curl: "curl -k -F \"file=@exported.zip\" -X POST -H \"Authorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9443/api/am/admin/v1/import/api?preserveProvider=false&overwrite=false"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/import/apis\nAuthorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK\nAPI imported successfully."
  /export/api:
    get:
      tags:
        - "API (Individual)"
      summary: "Export an API"
      description: "This operation can be used to export the details of a particular\
        \ API as a zip file.\n"
      produces:
        - "application/zip"
      parameters:
        - name: "name"
          in: "query"
          description: "API Name\n"
          required: true
          type: "string"
        - name: "version"
          in: "query"
          description: "Version of the API\n"
          required: true
          type: "string"
        - name: "providerName"
          in: "query"
          description: "Provider name of the API\n"
          required: false
          type: "string"
        - name: "format"
          in: "query"
          description: "Format of output documents. Can be YAML or JSON.\n"
          required: false
          type: "string"
          enum:
            - "JSON"
            - "YAML"
        - name: "preserveStatus"
          in: "query"
          description: "Preserve API Status on export\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK.\nExport Successful.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            type: "file"
        "404":
          description: "Not Found.\nRequested API does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nError in exporting API.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_import_export"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -X GET https://localhost:9443/api/am/admin/v1/export/api?name=PizzaShackAPI&version=1.0.0&providerName=admin\
        \ > exportAPI.zip"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/export/api?name=SampleAPI&version=1.0.0&providerName=admin\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK\n Connection: keep-alive\n  Content-Disposition:\
        \ attachment; filename=\"exported-api.zip\"\n  Content-Type: application/zip"
  /import/api-product:
    post:
      tags:
        - "API Product (Individual)"
      summary: "Import an API Product"
      description: "This operation can be used to import an API Product.\n"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "file"
          in: "formData"
          description: "Zip archive consisting on exported API Product configuration\n"
          required: true
          type: "file"
        - name: "preserveProvider"
          in: "query"
          description: "Preserve Original Provider of the API Product. This is the user\
          \ choice to keep or replace the API Product provider.\n"
          required: false
          type: "boolean"
        - name: "importAPIs"
          in: "query"
          description: "Whether to import the dependent APIs or not.\n"
          required: false
          type: "boolean"
        - name: "overwriteAPIProduct"
          in: "query"
          description: "Whether to update the API Product or not. This is used when\
          \ updating already existing API Products.\n"
          required: false
          type: "boolean"
        - name: "overwriteAPIs"
          in: "query"
          description: "Whether to update the dependent APIs or not. This is used when\
          \ updating already existing dependent APIs of an API Product.\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "Created.\nAPI Product Imported Successfully.\n"
        "403":
          description: "Forbidden\nNot Authorized to import.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested API Product to update not found.\n"
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: "Conflict.\nAPI Product to import already exists.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nError in importing API Product.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_product_import_export"
      x-wso2-curl: "curl -k -F \"file=@exported.zip\" -X POST -H \"Authorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9443/api/am/admin/v1/import/api-product?preserveProvider=false&overwriteAPIs=false&overwriteAPIProduct=false"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/import/api-product\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK\nAPI Product imported successfully."
  /export/api-product:
    get:
      tags:
        - "API Product (Individual)"
      summary: "Export an API Product"
      description: "This operation can be used to export the details of a particular\
        \ API Product as a zip file.\n"
      produces:
        - "application/zip"
      parameters:
        - name: "name"
          in: "query"
          description: "API Product Name\n"
          required: true
          type: "string"
        - name: "version"
          in: "query"
          description: "Version of the API Product\n"
          required: true
          type: "string"
        - name: "providerName"
          in: "query"
          description: "Provider name of the API Product\n"
          required: false
          type: "string"
        - name: "format"
          in: "query"
          description: "Format of output documents. Can be YAML or JSON.\n"
          required: false
          type: "string"
          enum:
            - "JSON"
            - "YAML"
        - name: "preserveStatus"
          in: "query"
          description: "Preserve API Product Status on export\n"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK.\nExport Successful.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            type: "file"
        "404":
          description: "Not Found.\nRequested API does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nError in exporting API Product.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_product_import_export"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -X GET https://localhost:9443/api/am/admin/v0.17/export/api-product?name=SampleAPIProduct&version=1.0.0&providerName=admin\
        \ > exportAPIProduct.zip"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v0.17/export/api-product?name=SampleAPIProduct&version=1.0.0&providerName=admin\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-response: "HTTP/1.1 200 OK\n Connection: keep-alive\n  Content-Disposition:\
        \ attachment; filename=\"exported-api-product.zip\"\n  Content-Type: application/zip"
  /labels:
    get:
      tags:
        - "Label Collection"
      summary: "Get all registered Labels"
      description: "Get all registered Labels\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nLabels returned\n"
          schema:
            $ref: "#/definitions/LabelList"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:label_read"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/labels\nAuthorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ \"https://localhost:9443/api/am/admin/v1/labels\""
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"count\": 1,\r\n  \"list\": [\r\n\t{\r\n\t\"id\":\"d7cf8523-9180-4255-84fa-6cb171c1f779\"\
        ,\r\n\t\"name\":\"internal\",\r\n\t\"description\":\"label used for internal\
        \ purpose\",\r\n\t\"accessUrls\":[\r\n\t  \"https://localhost:9095\"\r\n \
        \        ]\r\n       }\r\n   ]\r\n}"
    post:
      tags:
        - "Label"
      summary: "Add a Label"
      description: "Add a new gateway Label\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Label object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/Label"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\n"
          schema:
            $ref: "#/definitions/Label"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:label_manage"
      x-wso2-curl: "curl -k -X POST -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://apis.wso2.com/api/am/admin/v1/labels\
        \ -d @data.json"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/labels\r\nAuthorization:\
        \ Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type: application/json\r\
        \n\r\n   {\r\n       \"name\":\"internal\",\r\n\t\"description\":\"label used\
        \ for internal purpose\",\r\n\t\"accessUrls\":[\r\n\t  \"https://localhost:9095\"\
        \r\n         ]\r\n     }"
      x-wso2-response: "HTTP/1.1 201 Created\r\nContent-Type: application/json\r\n\
        \r\n{\r\n\t\"id\":\"d7cf8523-9180-4255-84fa-6cb171c1f779\",\r\n\t\"name\"\
        :\"internal\",\r\n\t\"description\":\"label used for internal purpose\",\r\
        \n\t\"accessUrls\":[\r\n\t  \"https://localhost:9095\"\r\n         ]\r\n \
        \      }\r\n   ]\r\n}"
  /bot-detection-data:
    get:
      summary: "Get all bot detected data\n"
      description: "Get all bot detected data\n"
      operationId: "getBotDetectionData"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK.\nBot detected data returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/BotDetectionDataList"
        "404":
          description: "Not Found.\nAnalytics Not Enabled.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:bot_data"
  /labels/{labelId}:
    put:
      tags:
        - "Label"
      summary: "Update a Label"
      description: "Update a Label by label Id\n"
      parameters:
        - name: "labelId"
          in: "path"
          description: "Label UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Label object with updated information\n"
          required: true
          schema:
            $ref: "#/definitions/Label"
      responses:
        "200":
          description: "OK.\nLabel updated.\n"
          schema:
            $ref: "#/definitions/Label"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:label_manage"
      x-wso2-curl: "curl -k -X PUT -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\
        \ -d @data.json"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v1/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\r\
        \nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type:\
        \ application/json\r\n\r\n   {\r\n       \"name\":\"update_internal\",\r\n\
        \t\"description\":\"Updated label used for internal purpose\",\r\n\t\"accessUrls\"\
        :[\r\n\t  \"https://localhost:9095\"\r\n         ]\r\n     }"
      x-wso2-response: "HTTP/1.1 200 Ok\r\nContent-Type: application/json\r\n\r\n\
        {\r\n\t\"id\":\"d7cf8523-9180-4255-84fa-6cb171c1f779\",\r\n\t\"name\":\"updated_internal\"\
        ,\r\n\t\"description\":\"Updated label used for internal purpose\",\r\n\t\"\
        accessUrls\":[\r\n\t  \"https://localhost:9095\"\r\n         ]\r\n       }\r\
        \n   ]\r\n}"
    delete:
      tags:
        - "Label"
      summary: "Delete a Label"
      description: "Delete a Label by label Id\n"
      parameters:
        - name: "labelId"
          in: "path"
          description: "Label UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nLabel successfully deleted.\n"
        "404":
          description: "Not Found.\nLabel to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:label_manage"
      x-wso2-response: "HTTP/1.1 200 OK"
  /monetization/publish-usage:
    post:
      tags:
        - "Monetization (Collection)"
      summary: "Publish Usage Records"
      description: "Publish Usage Records of Monetized APIs\n"
      parameters: []
      responses:
        "200":
          description: "Usage records successfully published."
          schema:
            $ref: "#/definitions/PublishStatus"
        "202":
          description: "Request is sucessfully accepted for processing."
          schema:
            $ref: "#/definitions/PublishStatus"
        "404":
          description: "Not Found.\n"
          schema:
            $ref: "#/definitions/PublishStatus"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/PublishStatus"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:monetization_usage_publish"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\"\
        \ -X POST -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/monetization/publish-usage"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/monetization/publish-usage\r\
        \nAuthorization: Bearer 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\r\nContent-Type:\
        \ application/json"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n\"status\":\"successfull\",\r\n\"message\":\"Records published successfully\"\
        \r\n}"
  /monetization/publish-usage/status:
    get:
      tags:
        - "Monetization (Collection)"
      summary: "Get the status of Monetization usage publisher"
      description: "Get the status of Monetization usage publisher\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nStatus returned\n"
          schema:
            $ref: "#/definitions/MonetizationUsagePublishInfo"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:monetization_usage_publish"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/monetization/publish-usage/status\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ \"https://localhost:9443/api/am/admin/v1/monetization/publish-usage/status\""
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n  \"state\": \"RUNNING\",\r\n ,\"status\":\"SUCCESSFULL\",\r\n, \"started\
        \ time\":\"12345678056L\",\r\n, \"last published time\":\"12345678056L\",\r\
        \n}"
  /workflows:
    get:
      tags:
        - "Workflow (Collection)"
      summary: "Retrieve All pending workflow processes\n"
      description: "This operation can be used to retrieve list of workflow pending\
        \ processes.\n"
      parameters:
        - name: "limit"
          in: "query"
          description: "Maximum size of resource array to return.\n"
          required: false
          type: "integer"
          default: 25
        - name: "offset"
          in: "query"
          description: "Starting point within the complete list of items qualified.\n"
          required: false
          type: "integer"
          default: 0
        - name: "Accept"
          in: "header"
          description: "Media types acceptable for the response. Default is application/json.\n"
          required: false
          type: "string"
          default: "application/json"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
        - name: "workflowType"
          in: "query"
          description: "We need to show the values of each workflow process separately\
          \ .for that we use workflow type.\nWorkflow type can be AM_APPLICATION_CREATION,\
          \ AM_SUBSCRIPTION_CREATION,   AM_USER_SIGNUP, AM_APPLICATION_REGISTRATION_PRODUCTION,\
          \ AM_APPLICATION_REGISTRATION_SANDBOX.\n"
          required: false
          type: "string"
          enum:
            - "AM_APPLICATION_CREATION"
            - "AM_SUBSCRIPTION_CREATION"
            - "AM_USER_SIGNUP"
            - "AM_APPLICATION_REGISTRATION_PRODUCTION"
            - "AM_APPLICATION_REGISTRATION_SANDBOX"
            - "AM_SUBSCRIPTION_DELETION"
            - "AM_APPLICATION_DELETION"
            - "AM_API_STATE"
      responses:
        "200":
          description: "OK.\nWorkflow pendding process list returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/WorkflowList"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource (Will be supported in future).\n"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested user does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_workflow_view"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/workflows\nAuthorization:\
        \ Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ \"https://localhost:9443/api/am/admin/v1/workflows\""
      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"\
        previous\": \"\",\n   \"list\":    [\n            {\n    \"WF_TYPE\": \"AM_APPLICATION_CREATION\"\
        ,\n         \"WF_STATUS\": \"APPROVED\",\n         \"WF_CREATED_TIME\": \"\
        \  2020-02-10 09:33:34.476\"\n    \"WF_UPDATED_TIME\": \"  2020-02-10 09:33:34.476\"\
        \n    \"WF_STATUS_DESC\": \"  Approve workflow request\"\n   \"TENANT_ID\"\
        : \"-1234\",\n  \"TENANT_DOMAIN\": \"carbon.super\",\n  \"WF_EXTERNAL_REFERENCE\"\
        : \"5871244b-d6f3-466e-8995-8accd1e64303\",\n  \"PAYLOAD\": \"7b2263616c6c4261636b55524c22\"\
        ,\n },\n  {\n         \"WF_ID\": \"\",\n         \"WF_REFERENCE\": \"ABBA\"\
        ,\n           \"WF_TYPE\": \"AM_APPLICATION_CREATION\",\n         \"WF_STATUS\"\
        : \"APPROVED\",\n         \"WF_CREATED_TIME\": \"  2020-01-10 09:32:34.476\"\
        \n    \"WF_UPDATED_TIME\": \"  2020-03-12 09:34:34.476\"\n    \"WF_STATUS_DESC\"\
        : \"  Approve workflow request\"\n   \"TENANT_ID\": \"-1234\",\n  \"TENANT_DOMAIN\"\
        : \"carbon.super\",\n  \"WF_EXTERNAL_REFERENCE\": \"5871244b-d6f3-466e-8922-8accd1e64303\"\
        ,\n  \"PAYLOAD\": \"7b226170694e616d65223a2253616\",\n }          "
  /workflows/{externalWorkflowRef}:
    get:
      tags:
        - "Workflows (Individual)"
      summary: "Get details of a the pending workflow request according to the External\
        \ Workflow Reference.\n"
      description: "Using this operation, you can retrieve complete details of a pending\
        \ workflow request that either belongs to application creation, application\
        \ subscription, application registration, api state change, user self sign\
        \ up.. You need to provide the External_Workflow_Reference of the workflow\
        \ Request to retrive it.\n"
      parameters:
        - name: "externalWorkflowRef"
          in: "path"
          description: "from the externel workflow reference we decide what is the the\
          \ pending request that the are requesting.\n"
          required: true
          type: "string"
        - name: "If-None-Match"
          in: "header"
          description: "Validator for conditional requests; based on the ETag of the\
          \ formerly retrieved\nvariant of the resource (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nRequested Workflow Pending is returned\n"
          schema:
            $ref: "#/definitions/WorkflowInfo"
        "304":
          description: "Not Modified.\nEmpty body because the client has already the\
            \ latest version of the requested resource.\n"
        "404":
          description: "Not Found.\nRequested workflow pendding process does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_workflow_view"
      x-wso2-curl: "curl https://localhost:9443/api/am/admin/v1/workflows/c43a325c-260b-4302-81cb-768eafaa3aed"
      x-wso2-curl-tenant: "curl -k -H \"X-WSO2-Tenant:test.com\" https://localhost:9443/api/am/admin/v0.17/workflows/c43a325c-260b-4302-81cb-768eafaa3aed"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/workflows/c43a325c-260b-4302-81cb-768eafaa3aed\n"
      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"\
        previous\": \"\",\n   \"list\":    [\n            {\n                 \"WF_TYPE\"\
        : \"AM_APPLICATION_CREATION\",\n         \"WF_STATUS\": \"APPROVED\",\n  \
        \       \"WF_CREATED_TIME\": \"  2020-02-10 09:33:34.476\"\n    \"WF_UPDATED_TIME\"\
        : \"  2020-02-10 09:33:34.476\"\n    \"WF_STATUS_DESC\": \"  Approve workflow\
        \ request\"\n   \"TENANT_ID\": \"-1234\",\n  \"TENANT_DOMAIN\": \"carbon.super\"\
        ,\n  \"WF_EXTERNAL_REFERENCE\": \"5871244b-d6f3-466e-8995-8accd1e64303\",\n\
        \  \"PAYLOAD\": \"7b2263616c6c4261636b55524c22\",\n } "
  /workflows/update-workflow-status:
    post:
      tags:
        - "Workflows (Individual)"
      summary: "Update workflow status"
      description: "This operation can be used to approve or reject a workflow task.\n"
      parameters:
        - name: "workflowReferenceId"
          in: "query"
          description: "Workflow reference id\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Workflow event that need to be updated\n"
          required: true
          schema:
            $ref: "#/definitions/Workflow"
      responses:
        "200":
          description: "OK.\nWorkflow request information is returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/Workflow"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nWorkflow for the given reference is not found.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:api_workflow_approve"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -H \"Content-Type: application/json\" -X POST -d @data.json \"https://localhost:9443/api/am/publisher/v1/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\""
      x-wso2-request: "POST https://localhost:9443/api/am/publisher/v1/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type:\
        \ application/json\n\n{\n   \"status\" : \"APPROVED\",\n   \"attributes\"\
        \ : {\n      \"apiCurrentState\": \"Created\",\n      \"apiLCAction\": \"\
        Publish\",\n      \"apiName\":\"APIname\",\n      \"apiVersion\" : \"1.0.0\"\
        ,\n      \"apiProvider\" : \"admin\",\n      \"invoker\": \"admin\"\n   }\n\
        }"
      x-wso2-response: "HTTP/1.1 200 OK"
  /tenant-info/{username}:
    get:
      tags:
        - "Tenants"
      summary: "Get tenant id of the user\n"
      description: "This operation is to get tenant id of the provided user\n"
      operationId: "getTenantInfoByUsername"
      parameters:
        - name: "username"
          in: "path"
          description: "The state represents the current state of the tenant\n\nSupported\
          \ states are [ active, inactive]\n"
          required: true
          type: "string"
          default: "john"
      responses:
        "200":
          description: "OK.\nTenant id of the user retrieved.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/TenantInfo"
        "404":
          description: "Not Found.\nRequested user does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tenantInfo"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -H \"Content-Type: application/json\" -X GET \"https://localhost:9443/api/am/admin/v1/tenant-info/john/info\""
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/tenant-info/john\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type:\
        \ application/json\n\n{\n   \"tenantDomain\" : \"carbon.super\",\n   \"tenantId\"\
        \ : -1234 \n}"
      x-wso2-response: "HTTP/1.1 200 OK"
  /custom-urls/{tenantDomain}:
    get:
      tags:
        - "Tenants"
      summary: "Get custom-url info of a tenant domain\n"
      description: "This operation is to get custom-url information of the provided\
        \ tenant-domain\n"
      operationId: "getCustomUrlInfoByTenantDomain"
      parameters:
        - name: "tenantDomain"
          in: "path"
          description: "The tenant domain name.\n"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nCustom url info of the tenant is retrieved.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/CustomUrlInfo"
        "404":
          description: "Not Found.\nRequested user does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tenantInfo"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ -H \"Content-Type: application/json\" -X GET \"https://localhost:9443/api/am/admin/v1/custom-url/foo.com\""
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/custom-url/foo.com\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type:\
        \ application/json\n\n{\n   \"tenantDomain\" : \"foo.com\",\n}"
      x-wso2-response: "HTTP/1.1 200 OK"
  /api-categories:
    get:
      tags:
        - "API Category (Collection)"
      summary: "Get all API categories"
      description: "Get all API categories\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nCategories returned\n"
          schema:
            $ref: "#/definitions/APICategoryList"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/api-categories\n\
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n"
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\
        \ \"https://localhost:9443/api/am/admin/v1/api-categories\""
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n\
        {\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"463e2c9f-5e99-43c3-a66e-de7e0f367373\"\
        ,\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance\
        \ related APIS\"\r\n      \"numberOfAPIs\":1\r\n}\r\n   ]\r\n      }\r\n \
        \  ]\r\n}"
    post:
      tags:
        - "API Category (Individual)"
      summary: "Add a new API Category"
      description: "Add a new API Category\n"
      parameters:
        - in: "body"
          name: "body"
          description: "API Category object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/APICategory"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\n"
          schema:
            $ref: "#/definitions/APICategory"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
      x-wso2-curl: "curl -k -X POST -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://apis.wso2.com/api/am/admin/v1/api-categories\
        \ -d @data.json"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v1/api-categories\r\
        \nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type:\
        \ application/json\r\n\r\n -d  {\r\n         \"name\":\"Finance\",\r\n   \
        \      \"description\":\"Finance related APIS\"\r\n }"
      x-wso2-response: "HTTP/1.1 201 Created\r\nContent-Type: application/json\r\n\
        \r\n{\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"\
        463e2c9f-5e99-43c3-a66e-de7e0f367373\",\r\n         \"name\":\"Finance\",\r\
        \n         \"description\":\"Finance related APIS\"\r\n }"
  /api-categories/{apiCategoryId}:
    put:
      tags:
        - "API Category (Individual)"
      summary: "Update an API Category"
      description: "Update an API Category by category Id\n"
      parameters:
        - name: "apiCategoryId"
          in: "path"
          description: "API Category UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "API Category object with updated information\n"
          required: true
          schema:
            $ref: "#/definitions/APICategory"
      responses:
        "200":
          description: "OK.\nLabel updated.\n"
          schema:
            $ref: "#/definitions/APICategory"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
      x-wso2-curl: "curl -k -X PUT -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\"\
        \ -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v1/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\
        \ -d @data.json"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v1/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\r\
        \nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type:\
        \ application/json\r\n\r\n   {\r\n       \"name\":\"update_internal\",\r\n\
        \t\"description\":\"Updated label used for internal purpose\",\r\n\t\"accessUrls\"\
        :[\r\n\t  \"https://localhost:9095\"\r\n         ]\r\n     }"
      x-wso2-response: "HTTP/1.1 200 Ok\r\nContent-Type: application/json\r\n\r\n\
        {\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"463e2c9f-5e99-43c3-a66e-de7e0f367373\"\
        ,\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance\
        \ related APIS\"\r\n      }\r\n   ]\r\n}"
    delete:
      tags:
        - "API Category (Individual)"
      summary: "Delete an API Category"
      description: "Delete an API Category by API Category Id\n"
      parameters:
        - name: "apiCategoryId"
          in: "path"
          description: "API Category UUID\n"
          required: true
          type: "string"
        - name: "If-Match"
          in: "header"
          description: "Validator for conditional requests; based on ETag (Will be supported\
          \ in future).\n"
          required: false
          type: "string"
        - name: "If-Unmodified-Since"
          in: "header"
          description: "Validator for conditional requests; based on Last Modified header\
          \ (Will be supported in future).\n"
          required: false
          type: "string"
      responses:
        "200":
          description: "OK.\nAPI Category successfully deleted.\n"
        "404":
          description: "Not Found.\nAPI Category to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
      x-wso2-response: "HTTP/1.1 200 OK"
  /settings:
    get:
      tags:
        - "Settings"
      summary: "Retreive admin settings"
      description: "Retreive admin settings\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nSettings returned\n"
          schema:
            $ref: "#/definitions/Settings"
        "404":
          description: "Not Found.\nRequested Settings does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_settings"
  /alert-types:
    get:
      tags:
        - "Alerts"
      summary: "Get the list of admin alert types.\n"
      description: "This operation is used to get the list of supportd alert types\
        \ for the apim admin dashboard\n"
      operationId: "getAdminAlertTypes"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe list of admin alert types are returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/AlertTypesList"
        "500":
          description: "Internal Server Error.\nAn internal server error occurred\
            \ while retrieving the alert types.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
  /alert-subscriptions:
    get:
      tags:
        - "Alert Subscriptions"
      summary: "Get the list of API Admin alert types subscribed by the user.\n"
      description: "This operation is used to get the list of subscribed alert types\
        \ by the user.\n"
      operationId: "getSubscribedAlertTypes"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe list of subscribed alert types are returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/AlertsSubscription"
        "500":
          description: "Internal Server Error\nAn error occurred while retrieving\
            \ subscribed alert types by user.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
    put:
      tags:
        - "Alert Subscriptions"
      summary: "Subscribe to an admin alert.\n"
      description: "This operation is used to subscribe to admin alerts\n"
      operationId: "subscribeToAlerts"
      parameters:
        - in: "body"
          name: "body"
          description: "The alerts list and the email list to subscribe."
          required: true
          schema:
            $ref: "#/definitions/AlertsSubscription"
      responses:
        "200":
          description: "OK.\nSuccessful response with the newly subscribed alerts.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/AlertsSubscription"
        "400":
          description: "Bad Request.\nInvalid Request or request validation failure.\n"
        "500":
          description: "Internal Server Error\nAn internal server error occurred while\
            \ subscribing to alerts.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
    delete:
      tags:
        - "Alert Subscriptions"
      summary: "Unsubscribe user from all the admin alert types.\n"
      description: "This operation is used to unsubscribe the respective user from\
        \ all the admin alert types.\n"
      operationId: "unsubscribeAllAlerts"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe user is unsubscribed from the alerts successfully.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
        "500":
          description: "Internal Server Error\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
  /alert-subscriptions/bot-detection:
    get:
      tags:
        - "Bot Detection Alert Subscriptions"
      summary: "Get the list of subscriptions for bot detection\n"
      description: "Get the list of subscriptions which are subscribed to receive\
        \ email alerts for bot detection\n"
      operationId: "getBotDetectionAlertSubscriptions"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe list of bot detection alert subscriptions are returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/BotDetectionAlertSubscriptionList"
        "500":
          description: "Internal Server Error.\nAn error occurred while retrieving\
            \ bot detection alert subscriptions.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
    post:
      tags:
        - "Bot Detection Alert Subscriptions"
      summary: "Subscribe for bot detection alerts"
      description: "Register a subscription for bot detection alerts\n"
      operationId: "subscribeForBotDetectionAlerts"
      parameters:
        - in: "body"
          name: "body"
          description: "The email to register to receive bot detection alerts\n"
          required: true
          schema:
            $ref: "#/definitions/BotDetectionAlertSubscription"
      responses:
        "200":
          description: "OK.\nBot detection alert subscription is registered successfully.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/BotDetectionAlertSubscription"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nAn error occurred while adding a bot\
            \ detection subscription.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
  /alert-subscriptions/bot-detection/{uuid}:
    delete:
      tags:
        - "Bot Detection Alert Subscriptions"
      summary: "Unsubscribe from bot detection alerts."
      description: "Delete a subscription from bot detection alerts.\n"
      operationId: "unsubscribeFromBotDetectionAlerts"
      parameters:
        - name: "uuid"
          in: "path"
          description: "uuid of the subscription"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nBot detection alert subscription is deleted successfully.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
        "404":
          description: "Not Found.\nResource to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error\nAn error occurred while deleting a\
            \ bot detection subscription.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_alert_manage"
  /system-scopes/{scopeName}:
    get:
      tags:
        - "System Scopes"
      summary: "Retrieve scopes for a particular user"
      description: "This operation will return the scope list of particular user\n\
        In order to get it, we need to pass the userId as a query parameter\n"
      operationId: "systemScopesScopeNameGet"
      parameters:
        - name: "username"
          in: "query"
          required: false
          type: "string"
        - name: "scopeName"
          in: "path"
          description: "scope name to be validated\n"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nParticular scope exists for the given user.\n"
          schema:
            $ref: "#/definitions/ScopeSettings"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested user does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:scope_manage"
      x-wso2-curl: "curl -k -X GET \"https://localhost:9443/api/am/admin/v1/system-scopes/YXBpbTpzdWJzY3JpYmU?username=john\"\
        \ -H \"accept: application/json\" -H \"Authorization: Bearer 8e8edc50-4a70-3fec-af00-ce08097012ab"
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v1/system-scopes/Base64urlEncode(apim:subscribe)?username=john\
        \ Authorization: Bearer 8e8edc50-4a70-3fec-af00-ce08097012ab"
      x-wso2-response: "{\n  \"name\":\"apim:subscribe\"  \n}\n"
  /system-scopes:
    get:
      tags:
        - "System Scopes"
      summary: "Get the list of role scope mapping.\n"
      description: "This operation is used to get the list of role scope mapping from\
        \ tenant-conf for the apim admin dashboard\n"
      operationId: "systemScopesGet"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe list of role scope mappings are returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/ScopeList"
        "500":
          description: "Internal Server Error.\nAn internal server error occurred\
            \ while retrieving the role scope mapping.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:scope_manage"
            - "apim:admin"
    put:
      tags:
        - "System Scopes"
      summary: "Update Roles For Scope\n"
      description: "This operation is used to update the roles for all scopes\n"
      operationId: "updateRolesForScope"
      parameters:
        - in: "body"
          name: "body"
          description: "Key Manager object with updated information\n"
          required: true
          schema:
            $ref: "#/definitions/ScopeList"
      responses:
        "200":
          description: "OK.\nSuccessful response with the newly added roles.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/ScopeList"
        "400":
          description: "Bad Request.\nInvalid Request or request validation failure.\n"
        "500":
          description: "Internal Server Error\nAn internal server error occurred while\
            \ updating the roles.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:scope_manage"
  /system-scopes/role-aliases:
    get:
      tags:
        - "System Scopes"
      summary: "Retrieve role alias mappings"
      description: "This operation can be used to retreive role alias mapping\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nThe list of role mappings are returned.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/RoleAliasList"
        "404":
          description: "Not Found.\nRequested alias does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:scope_manage"
    put:
      tags:
        - "System Scopes"
      summary: "Add a new role alias"
      description: "This operation can be used to add a new role alias mapping for\
        \ system scope roles\n"
      parameters:
        - in: "body"
          name: "body"
          description: "role-alias mapping"
          required: true
          schema:
            $ref: "#/definitions/RoleAliasList"
      responses:
        "200":
          description: "OK.\nRole mapping alias returned\n"
          schema:
            $ref: "#/definitions/RoleAliasList"
        "400":
          description: "Bad Request.\nInvalid Request or request validation failure.\n"
        "500":
          description: "Internal Server Error\nAn internal server error occurred while\
            \ updating the roles.\n"
      security:
        - OAuth2Security:
            - "apim:scope_manage"
            - "apim:admin"
  /tenant-theme:
    get:
      tags:
        - "Tenant Theme"
      summary: "Export a DevPortal Tenant Theme"
      description: "This operation can be used to export a DevPortal tenant theme\
        \ as a zip file.\n"
      operationId: "exportTenantTheme"
      produces:
        - "application/zip"
      parameters: []
      responses:
        "200":
          description: "OK.\nTenant Theme Exported Successfully.\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            type: "file"
        "403":
          description: "Forbidden.\nNot Authorized to export.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nRequested tenant theme does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error.\nError in exporting tenant theme.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tenant_theme_manage"
    put:
      tags:
        - "Tenant Theme"
      summary: "Import a DevPortal Tenant Theme"
      description: "This operation can be used to import a DevPortal tenant theme.\n"
      operationId: "importTenantTheme"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "file"
          in: "formData"
          description: "Zip archive consisting of tenant theme configuration\n"
          required: true
          type: "file"
      responses:
        "200":
          description: "Ok.\nTenant Theme Imported Successfully.\n"
        "403":
          description: "Forbidden.\nNot Authorized to import.\n"
          schema:
            $ref: "#/definitions/Error"
        "413":
          description: "Payload Too Large.\nTenant Theme file size exceeds the allowed\
            \ limit.\n"
        "500":
          description: "Internal Server Error.\nError in importing Theme.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:tenant_theme_manage"
  /key-managers:
    get:
      tags:
        - "Key Manager (Collection)"
      summary: "Get all Key managers"
      description: "Get all Key managers\n"
      parameters: []
      responses:
        "200":
          description: "OK.\nKeyManagers returned\n"
          schema:
            $ref: "#/definitions/KeyManagerList"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
    post:
      tags:
        - "Key Manager (Collection)"
      summary: "Add a new API Key Manager"
      description: "Add a new API Key Manager\n"
      parameters:
        - in: "body"
          name: "body"
          description: "Key Manager object that should to be added\n"
          required: true
          schema:
            $ref: "#/definitions/KeyManager"
      responses:
        "201":
          description: "Created.\nSuccessful response with the newly created object\
            \ as entity in the body.\n"
          schema:
            $ref: "#/definitions/KeyManager"
        "400":
          description: "Bad Request.\nInvalid request or validation error\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
  /key-managers/{keyManagerId}:
    get:
      tags:
        - "Key Manager (Individual)"
      summary: "Get a Key Manager Configuration"
      description: "Retrieve a single Key Manager Configuration. We should provide\
        \ the Id of the KeyManager as a path parameter.\n"
      parameters:
        - name: "keyManagerId"
          in: "path"
          description: "Key Manager UUID\n"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nKeyManager Configuration returned\n"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the body.\n"
          schema:
            $ref: "#/definitions/KeyManager"
        "404":
          description: "Not Found.\nRequested KeyManager Configuration does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
        "406":
          description: "Not Acceptable.\nThe requested media type is not supported.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
    put:
      tags:
        - "Key Manager (Individual)"
      summary: "Update a Key Manager"
      description: "Update a Key Manager by keyManager id\n"
      parameters:
        - name: "keyManagerId"
          in: "path"
          description: "Key Manager UUID\n"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Key Manager object with updated information\n"
          required: true
          schema:
            $ref: "#/definitions/KeyManager"
      responses:
        "200":
          description: "OK.\nLabel updated.\n"
          schema:
            $ref: "#/definitions/KeyManager"
        "400":
          description: "Bad Request.\nInvalid request or validation error.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found.\nThe resource to be updated does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
    delete:
      tags:
        - "Key Manager (Individual)"
      summary: "Delete a Key Manager"
      description: "Delete a Key Manager by keyManager id\n"
      parameters:
        - name: "keyManagerId"
          in: "path"
          description: "Key Manager UUID\n"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK.\nKey Manager successfully deleted.\n"
        "404":
          description: "Not Found.\nKey Manager to be deleted does not exist.\n"
          schema:
            $ref: "#/definitions/Error"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
  /key-managers/discover:
    post:
      tags:
        - "Key Manager (Collection)"
      summary: "Retrieve Well-known information from KeyManager Well-known Endpoint."
      description: "Get all Key managers\n"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "url"
          in: "formData"
          description: "Well-Known Endpoint"
          required: false
          type: "string"
        - name: "type"
          in: "formData"
          description: "Key Manager Type\n"
          required: false
          type: "string"
          default: "false"
      responses:
        "200":
          description: "OK.\nKeyManagers returned\n"
          schema:
            $ref: "#/definitions/KeyManagerWellKnownResponse"
      security:
        - OAuth2Security:
            - "apim:admin"
            - "apim:admin_operations"
securityDefinitions:
  OAuth2Security:
    type: "oauth2"
    tokenUrl: "https://localhost:9443/oauth2/token"
    flow: "password"
    scopes:
      openid: "Authorize access to user details"
      apim:admin: "Manage all admin operations"
      apim:tier_view: "View throttling policies"
      apim:tier_manage: "Update and delete throttling policies"
      apim:bl_view: "View deny policies"
      apim:bl_manage: "Update and delete deny policies"
      apim:mediation_policy_view: "View mediation policies"
      apim:mediation_policy_create: "Create and update mediation policies"
      apim:app_owner_change: "Retrieve and manage applications"
      apim:app_import_export: "Import and export applications related operations"
      apim:api_import_export: "Import and export APIs related operations"
      apim:api_product_import_export: "Import and export API Products related operations"
      apim:label_manage: "Manage microgateway labels"
      apim:label_read: "Retrieve microgateway labels"
      apim:monetization_usage_publish: "Retrieve and publish Monetization related\
        \ usage records"
      apim:api_workflow_approve: "Manage workflows"
      apim:bot_data: "Retrieve bot detection data"
      apim:tenantInfo: "Retrieve tenant related information"
      apim:tenant_theme_manage: "Manage tenant themes"
      apim:admin_operations: "Manage API categories"
      apim:admin_settings: "Retrieve admin settings"
      apim:admin_alert_manage: "Manage admin alerts"
      apim:api_workflow_view: "Retrive workflow requests"
      apim:scope_manage: "Manage scope"
definitions:
  Error:
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "integer"
        format: "int64"
        description: "Error code"
      message:
        type: "string"
        description: "Error message."
      description:
        type: "string"
        description: "A detail description about the error message.\n"
      moreInfo:
        type: "string"
        description: "Preferably an url with more details about the error.\n"
      error:
        type: "array"
        description: "If there are more than one error list them out.\nFor example,\
          \ list out validation errors by each field.\n"
        items:
          $ref: "#/definitions/ErrorListItem"
    title: "Error object returned with 4XX HTTP status"
  ErrorListItem:
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "string"
        description: "Error code"
      message:
        type: "string"
        description: "Description about individual errors occurred\n"
    title: "Description of individual errors that may have occurred during a request."
  ThrottlePolicy:
    required:
      - "policyName"
    discriminator: "policyName"
    properties:
      policyId:
        type: "string"
        example: "0c6439fd-9b16-3c2e-be6e-1086e0b9aa93"
        description: "Id of policy"
      policyName:
        type: "string"
        example: "Policy1"
        description: "Name of policy"
      displayName:
        type: "string"
        description: "Display name of the policy"
      description:
        type: "string"
        description: "Description of the policy"
      isDeployed:
        type: "boolean"
        description: "Indicates whether the policy is deployed successfully or not."
        default: false
    title: "Generic Throttling Policy"
  AdvancedThrottlePolicyInfo:
    title: "Advanced Throttling Policy"
    allOf:
      - $ref: "#/definitions/ThrottlePolicy"
      - properties:
          defaultLimit:
            $ref: "#/definitions/ThrottleLimit"
  AdvancedThrottlePolicy:
    title: "Advanced Throttling Policy"
    allOf:
      - $ref: "#/definitions/ThrottlePolicy"
      - required:
          - "defaultLimit"
        properties:
          defaultLimit:
            $ref: "#/definitions/ThrottleLimit"
          conditionalGroups:
            type: "array"
            description: "Group of conditions which allow adding different parameter\
            \ conditions to the throttling limit.\n"
            items:
              $ref: "#/definitions/ConditionalGroup"
  AdvancedThrottlePolicyList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Advanced Throttling Policies returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/AdvancedThrottlePolicyInfo"
    title: "Advanced Throttling Policy List"
  ApplicationThrottlePolicy:
    title: "Application Throttling Policy"
    allOf:
      - $ref: "#/definitions/ThrottlePolicy"
      - required:
          - "defaultLimit"
        properties:
          defaultLimit:
            $ref: "#/definitions/ThrottleLimit"
  ApplicationThrottlePolicyList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Application Throttling Policies returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationThrottlePolicy"
    title: "Application Level Throttling Policy List"
  SubscriptionThrottlePolicy:
    title: "Subscription Throttling Policy"
    allOf:
      - $ref: "#/definitions/ThrottlePolicy"
      - $ref: "#/definitions/GraphQLQuery"
      - required:
          - "defaultLimit"
        properties:
          defaultLimit:
            $ref: "#/definitions/ThrottleLimit"
          monetization:
            $ref: "#/definitions/MonetizationInfo"
          rateLimitCount:
            type: "integer"
            example: 10
            description: "Burst control request count"
          rateLimitTimeUnit:
            type: "string"
            description: "Burst control time unit"
          customAttributes:
            type: "array"
            example: {}
            description: "Custom attributes added to the Subscription Throttling Policy\n"
            items:
              $ref: "#/definitions/CustomAttribute"
          stopOnQuotaReach:
            type: "boolean"
            description: "This indicates the action to be taken when a user goes beyond\
            \ the allocated quota. If checked, the user's requests will be dropped.\
            \ If unchecked, the requests will be allowed to pass through.\n"
            default: false
          billingPlan:
            type: "string"
            description: "define whether this is Paid or a Free plan. Allowed values\
            \ are FREE or COMMERCIAL.\n"
          permissions:
            $ref: "#/definitions/SubscriptionThrottlePolicyPermission"
  SubscriptionThrottlePolicyPermission:
    required:
      - "permissionType"
      - "roles"
    properties:
      permissionType:
        type: "string"
        example: "deny"
        enum:
          - "ALLOW"
          - "DENY"
      roles:
        type: "array"
        example:
          - "Internal/everyone"
        items:
          type: "string"
    title: "SubscriptionThrottlePolicyPermission"
  GraphQLQuery:
    properties:
      graphQLMaxComplexity:
        type: "integer"
        example: 400
        description: "Maximum Complexity of the GraphQL query"
      graphQLMaxDepth:
        type: "integer"
        example: 10
        description: "Maximum Depth of the GraphQL query"
    title: "GraphQL Query"
  SubscriptionThrottlePolicyList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Subscription Throttling Policies returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionThrottlePolicy"
    title: "Subscription Level Throttling Policy List"
  CustomRule:
    title: "Custom Rule"
    allOf:
      - $ref: "#/definitions/ThrottlePolicy"
      - required:
          - "keyTemplate"
          - "siddhiQuery"
        properties:
          siddhiQuery:
            type: "string"
            example: "FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\
            \ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\\
            nINSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\
            \ min) \\nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp\
            \ group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\n"
            description: "Siddhi query which represents the custom throttling policy"
          keyTemplate:
            type: "string"
            example: "$userId"
            description: "The specific combination of attributes that are checked in\
            \ the policy."
  CustomRuleList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Custom Rules returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/CustomRule"
    title: "Custom Rule List"
  ConditionalGroup:
    required:
      - "conditions"
      - "limit"
    properties:
      description:
        type: "string"
        description: "Description of the Conditional Group"
      conditions:
        type: "array"
        example: "[\n  {\n    \"type\": \"HEADERCONDITION\",\n    \"invertCondition\"\
          : false,\n    \"headerCondition\":\n    {\n      \"headerName\": \"Host\"\
          ,\n      \"headerValue\": \"10.100.7.77\"\n    }\n\t},\n\t{\n    \"type\"\
          : \"IPCONDITION\",\n    \"invertCondition\": false,\n    \"ipCondition\"\
          :\n    {\n      \"ipConditionType\": \"IPSPECIFIC\",\n      \"specificIP\"\
          : \"10.100.1.22\",\n      \"startingIP\": null,\n      \"endingIP\": null\n\
          \    }\n\t},\n\t{\n    \"type\": \"QUERYPARAMETERCONDITION\",\n    \"invertCondition\"\
          : false,\n    \"queryParameterCondition\":\n    {\n      \"parameterName\"\
          : \"name\",\n      \"parameterValue\": \"admin\"\n    }\n\t},\n\t{\n   \
          \ \"type\": \"JWTCLAIMSCONDITION\",\n    \"invertCondition\": true,\n  \
          \  \"jwtClaimsCondition\":\n    {\n      \"claimUrl\": \"claimUrl0\",\n\
          \      \"attribute\": \"claimAttr0\"\n    }\n  }\n]\n"
        description: "Individual throttling conditions. They can be defined as either\
          \ HeaderCondition, IPCondition, JWTClaimsCondition, QueryParameterCondition\n\
          Please see schemas of each of those throttling condition in Definitions\
          \ section.\n"
        items:
          $ref: "#/definitions/ThrottleCondition"
      limit:
        $ref: "#/definitions/ThrottleLimit"
    title: "Conditional Groups for Throttling"
  ThrottleCondition:
    required:
      - "type"
    properties:
      type:
        type: "string"
        description: "Type of the throttling condition. Allowed values are \"HEADERCONDITION\"\
          , \"IPCONDITION\", \"JWTCLAIMSCONDITION\"\nand \"QUERYPARAMETERCONDITION\"\
          .\n"
        enum:
          - "HEADERCONDITION"
          - "IPCONDITION"
          - "JWTCLAIMSCONDITION"
          - "QUERYPARAMETERCONDITION"
      invertCondition:
        type: "boolean"
        description: "Specifies whether inversion of the condition to be matched against\
          \ the request.\n\n**Note:** When you add conditional groups for advanced\
          \ throttling policies, this paramater should have the\nsame value ('true'\
          \ or 'false') for the same type of conditional group.\n"
        default: false
      headerCondition:
        $ref: "#/definitions/HeaderCondition"
      ipCondition:
        $ref: "#/definitions/IPCondition"
      jwtClaimsCondition:
        $ref: "#/definitions/JWTClaimsCondition"
      queryParameterCondition:
        $ref: "#/definitions/QueryParameterCondition"
    title: "Throttling Conditions"
    description: "Conditions used for Throttling"
  HeaderCondition:
    required:
      - "headerName"
      - "headerValue"
    properties:
      headerName:
        type: "string"
        description: "Name of the header"
      headerValue:
        type: "string"
        description: "Value of the header"
    title: "HTTP Header based throttling condition"
  IPCondition:
    required:
      - "specificIP"
    properties:
      ipConditionType:
        type: "string"
        description: "Type of the IP condition. Allowed values are \"IPRANGE\" and\
          \ \"IPSPECIFIC\""
        enum:
          - "IPRANGE"
          - "IPSPECIFIC"
      specificIP:
        type: "string"
        description: "Specific IP when \"IPSPECIFIC\" is used as the ipConditionType"
      startingIP:
        type: "string"
        description: "Staring IP when \"IPRANGE\" is used as the ipConditionType"
      endingIP:
        type: "string"
        description: "Ending IP when \"IPRANGE\" is used as the ipConditionType"
    title: "IP based throttling condition"
  JWTClaimsCondition:
    required:
      - "attribute"
      - "claimUrl"
    properties:
      claimUrl:
        type: "string"
        description: "JWT claim URL"
      attribute:
        type: "string"
        description: "Attribute to be matched"
    title: "JWT claim attibute based throttling condition"
  QueryParameterCondition:
    required:
      - "parameterName"
      - "parameterValue"
    properties:
      parameterName:
        type: "string"
        description: "Name of the query parameter"
      parameterValue:
        type: "string"
        description: "Value of the query parameter to be matched"
    title: "Query parameter based throttling condition"
  ThrottleLimitBase:
    required:
      - "timeUnit"
      - "unitTime"
    properties:
      timeUnit:
        type: "string"
        example: "min"
        description: "Unit of the time. Allowed values are \"sec\", \"min\", \"hour\"\
          , \"day\""
      unitTime:
        type: "integer"
        example: 10
        description: "Time limit that the throttling limit applies."
    title: "Throttle Limit Base"
  ThrottleLimit:
    required:
      - "type"
    properties:
      type:
        type: "string"
        example: "REQUESTCOUNTLIMIT"
        description: "Type of the throttling limit. Allowed values are \"REQUESTCOUNTLIMIT\"\
          \ and \"BANDWIDTHLIMIT\".\nPlease see schemas of \"RequestCountLimit\" and\
          \ \"BandwidthLimit\" throttling limit types in\nDefinitions section.\n"
        enum:
          - "REQUESTCOUNTLIMIT"
          - "BANDWIDTHLIMIT"
      requestCount:
        $ref: "#/definitions/RequestCountLimit"
      bandwidth:
        $ref: "#/definitions/BandwidthLimit"
    title: "Throttle Limit"
  MonetizationInfo:
    required:
      - "monetizationPlan"
      - "properties"
    properties:
      monetizationPlan:
        type: "string"
        example: "FixedRate"
        description: "Flag to indicate the monetization plan"
        enum:
          - "FixedRate"
          - "DynamicRate"
      properties:
        type: "object"
        description: "Map of custom properties related to each monetization plan"
        additionalProperties:
          type: "string"
    title: "API monetization details object"
  BandwidthLimit:
    title: "Bandwidth Limit object"
    allOf:
      - $ref: "#/definitions/ThrottleLimitBase"
      - required:
          - "dataAmount"
          - "dataUnit"
        properties:
          dataAmount:
            type: "integer"
            format: "int64"
            example: 1000
            description: "Amount of data allowed to be transfered"
          dataUnit:
            type: "string"
            example: "KB"
            description: "Unit of data allowed to be transfered. Allowed values are\
            \ \"KB\", \"MB\" and \"GB\""
  RequestCountLimit:
    title: "Request Count Limit object"
    allOf:
      - $ref: "#/definitions/ThrottleLimitBase"
      - required:
          - "requestCount"
        properties:
          requestCount:
            type: "integer"
            format: "int64"
            example: 1000
            description: "Maximum number of requests allowed"
  BlockingCondition:
    required:
      - "conditionType"
      - "conditionValue"
    properties:
      conditionId:
        type: "string"
        example: "b513eb68-69e8-4c32-92cf-852c101363cf"
        description: "Id of the blocking condition"
      conditionType:
        type: "string"
        example: "IP"
        description: "Type of the blocking condition"
      conditionValue:
        type: "object"
        example: "{\"fixedIp\":\"192.168.1.1\":\"invert\":false}"
        description: "Value of the blocking condition"
        properties: {}
      conditionStatus:
        type: "boolean"
        example: true
        description: "Status of the blocking condition"
    title: "Blocking Conditions"
    description: "Blocking Conditions"
  BlockingConditionList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Blocking Conditions returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/BlockingCondition"
    title: "Blocking Conditions List"
  BlockingConditionStatus:
    required:
      - "conditionStatus"
    properties:
      conditionId:
        type: "string"
        example: "b513eb68-69e8-4c32-92cf-852c101363cf"
        description: "Id of the blocking condition"
      conditionStatus:
        type: "boolean"
        example: true
        description: "Status of the blocking condition"
    title: "Blocking Conditions Status"
    description: "Blocking Conditions Status"
  CustomAttribute:
    required:
      - "name"
      - "value"
    properties:
      name:
        type: "string"
        example: "customAttr1"
        description: "Name of the custom attribute"
      value:
        type: "string"
        example: "value1"
        description: "Value of the custom attribute"
    title: "Name-Value pair"
  mediationList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of mediation sequences returned.\n"
      next:
        type: "string"
        example: ""
        description: "Link to the next subset of sequences qualified.\nEmpty if no\
          \ more sequences are to be returned.\n"
      previous:
        type: "string"
        example: ""
        description: "Link to the previous subset of sequences qualified.\nEmpty if\
          \ current subset is the first subset returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/MediationInfo"
    title: "Mediation List"
  MediationInfo:
    required:
      - "id"
      - "name"
      - "type"
    properties:
      name:
        type: "string"
        example: "json_fault.xml"
      id:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      type:
        type: "string"
        example: "in"
        enum:
          - "in"
          - "out"
          - "fault"
    title: "MediationInfo"
  Mediation:
    required:
      - "config"
      - "name"
      - "type"
    properties:
      id:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: "string"
        example: "json_fault.xml"
      type:
        type: "string"
        example: "in"
        enum:
          - "in"
          - "out"
          - "fault"
      config:
        type: "string"
        example: "<sequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"log_in_message\"\
          > <log level=\"full\"> <property name=\"IN_MESSAGE\" value=\"IN_MESSAGE_21133232\"\
          /> </log> </sequence>"
    title: "Mediation"
  ApplicationList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of applications returned.\n"
      next:
        type: "string"
        example: "/applications?limit=1&offset=2&user="
        description: "Link to the next subset of resources qualified.\nEmpty if no\
          \ more resources are to be returned.\n"
      previous:
        type: "string"
        example: "/applications?limit=1&offset=0&user="
        description: "Link to the previous subset of resources qualified.\nEmpty if\
          \ current subset is the first subset returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationInfo"
    title: "Application List"
  ApplicationInfo:
    properties:
      applicationId:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: "string"
        example: "CalculatorApp"
      owner:
        type: "string"
        example: "admin"
      status:
        type: "string"
        example: "APPROVED"
      groupId:
        type: "string"
        example: ""
    title: "Application info object with basic application details"
  APIInfoList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of API Info objects returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/APIInfo"
    title: "API Info List"
  APIInfo:
    properties:
      name:
        type: "string"
        example: "PizzaShackAPI"
        description: "The name of the API."
      version:
        type: "string"
        example: "1.0.0"
        description: "The version of the API"
      provider:
        type: "string"
        example: "admin"
        description: "The provider of the API"
    title: "API info object with basic API details"
  Label:
    required:
      - "name"
    properties:
      id:
        type: "string"
        example: "This is not mandatory.Auto generate by code"
      name:
        type: "string"
        example: "Public"
      description:
        type: "string"
        example: "Label to use for public Gateway"
      accessUrls:
        type: "array"
        items:
          type: "string"
          example: "http://localhost:9443/"
    title: "Label"
  LabelList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Labels returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/Label"
    title: "Label List"
  PublishStatus:
    properties:
      status:
        type: "string"
        description: "Status of the usage publish request"
      message:
        type: "string"
        description: "detailed message of the status"
    title: "Usage publish status"
  MonetizationUsagePublishInfo:
    properties:
      state:
        type: "string"
        description: "State of usage publish job"
      status:
        type: "string"
        description: "Status of usage publish job"
      startedTime:
        type: "string"
        description: "Timestamp of the started time of the Job"
      lastPublsihedTime:
        type: "string"
        description: "Timestamp of the last published time"
    title: "Usage publish status"
  Workflow:
    required:
      - "status"
    properties:
      status:
        type: "string"
        example: "APPROVED"
        description: "This attribute declares whether this workflow task is approved\
          \ or rejected.\n"
        enum:
          - "APPROVED"
          - "REJECTED"
      attributes:
        type: "object"
        example: {}
        description: "Custom attributes to complete the workflow task\n"
        additionalProperties:
          type: "string"
      description:
        type: "string"
        example: "Approve workflow request."
    title: "workflow"
  TenantInfo:
    type: "object"
    properties:
      username:
        type: "string"
        example: "john"
      tenantDomain:
        type: "string"
        example: "carbon.super"
      tenantId:
        type: "integer"
        example: -1234
    title: "Tenant information"
    description: "The tenant information of the user"
  CustomUrlInfo:
    type: "object"
    properties:
      tenantDomain:
        type: "string"
        example: "carbon.super"
      tenantAdminUsername:
        type: "string"
        example: "john@foo.com"
      enabled:
        type: "boolean"
        example: true
      devPortal:
        type: "object"
        properties:
          url:
            type: "string"
            example: "http://example.com"
    title: "Custom url information"
    description: "The custom url information of the tenant domain"
  APICategory:
    required:
      - "name"
    properties:
      id:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: "string"
        example: "Finance"
      description:
        type: "string"
        example: "Finance related APIs"
      numberOfAPIs:
        type: "integer"
        example: 1
    title: "API Category"
  APICategoryList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of API categories returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/APICategory"
    title: "API Category List"
  FileInfo:
    properties:
      relativePath:
        type: "string"
        example: "api-categories/01234567-0123-0123-0123-012345678901/thumbnail"
        description: "relative location of the file (excluding the base context and\
          \ host of the Admin API)"
      mediaType:
        type: "string"
        example: "image/jpeg"
        description: "media-type of the file"
    title: "File Information including meta data"
  Settings:
    properties:
      scopes:
        type: "array"
        items:
          type: "string"
      keyManagerConfiguration:
        type: "array"
        items:
          type: "object"
          properties:
            type:
              type: "string"
              example: "default"
            displayName:
              type: "string"
              example: "default"
            defaultConsumerKeyClaim:
              type: "string"
              example: "azp"
            defaultScopesClaim:
              type: "string"
              example: "scope"
            configurations:
              type: "array"
              items:
                $ref: "#/definitions/KeyManagerConfiguration"
      analyticsEnabled:
        type: "boolean"
        example: false
        description: "To determine whether analytics is enabled or not"
    title: "Settings"
  ScopeList:
    properties:
      count:
        type: "integer"
        example: 60
        description: "Number of scopes available for tenant.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/Scope"
    title: "Scope Role Mapping List"
  Scope:
    properties:
      tag:
        type: "string"
        example: "publisher"
        description: "Portal name.\n"
      name:
        type: "string"
        example: "apim:api_publish"
        description: "Scope name.\n"
      description:
        type: "string"
        example: "Publish API"
        description: "About scope.\n"
      roles:
        type: "array"
        example:
          - "admin"
          - "Internal/publisher"
        description: "Roles for the particular scope.\n"
        items:
          type: "string"
    title: "Scope Role"
  KeyManagerWellKnownResponse:
    properties:
      valid:
        type: "boolean"
        example: true
        default: false
      value:
        $ref: "#/definitions/KeyManager"
    title: "Key Manager Well-Known Response."
  KeyManager:
    required:
      - "name"
      - "type"
    properties:
      id:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: "string"
        example: "WSO2 IS"
      displayName:
        type: "string"
        example: "KeyManager1"
        description: "display name of Key Manager to  show in UI\n"
      type:
        type: "string"
        example: "IS"
      description:
        type: "string"
        example: "This is a key manager for Developers"
      wellKnownEndpoint:
        type: "string"
        example: ""
        description: "Well-Known Endpoint of Identity Provider.\n"
      introspectionEndpoint:
        type: "string"
        example: ""
      clientRegistrationEndpoint:
        type: "string"
        example: ""
      tokenEndpoint:
        type: "string"
        example: ""
      revokeEndpoint:
        type: "string"
        example: ""
      userInfoEndpoint:
        type: "string"
        example: ""
      authorizeEndpoint:
        type: "string"
        example: ""
      certificates:
        type: "object"
        properties:
          type:
            type: "string"
            enum:
              - "JWKS"
              - "PEM"
          value:
            type: "string"
      issuer:
        type: "string"
        example: ""
      scopeManagementEndpoint:
        type: "string"
        example: ""
      availableGrantTypes:
        type: "array"
        items:
          type: "string"
          example: "client_credentials"
      enableTokenGeneration:
        type: "boolean"
        example: true
      enableTokenEncryption:
        type: "boolean"
        example: false
        default: false
      enableTokenHashing:
        type: "boolean"
        example: false
        default: false
      enableMapOAuthConsumerApps:
        type: "boolean"
        example: false
        default: false
      enableOAuthAppCreation:
        type: "boolean"
        example: false
        default: false
      enableSelfValidationJWT:
        type: "boolean"
        example: true
        default: true
      claimMapping:
        type: "array"
        items:
          $ref: "#/definitions/ClaimMappingEntry"
      consumerKeyClaim:
        type: "string"
        example: "azp"
      scopesClaim:
        type: "string"
        example: "scp"
      tokenValidation:
        type: "array"
        items:
          $ref: "#/definitions/TokenValidation"
      enabled:
        type: "boolean"
        example: true
      additionalProperties:
        type: "object"
        properties: {}
    title: "Key Manager"
  KeyManagerInfo:
    required:
      - "name"
      - "type"
    properties:
      id:
        type: "string"
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: "string"
        example: "WSO2 IS"
      type:
        type: "string"
        example: "IS"
      description:
        type: "string"
        example: "This is a key manager for Developers"
      enabled:
        type: "boolean"
        example: true
    title: "Key Manager Info"
  KeyManagerConfiguration:
    properties:
      name:
        type: "string"
        example: "consumer_key"
      label:
        type: "string"
        example: "Consumer Key"
      type:
        type: "string"
        example: "select"
      required:
        type: "boolean"
        example: true
      mask:
        type: "boolean"
        example: true
      multiple:
        type: "boolean"
        example: true
      tooltip:
        type: "string"
        example: "Entet username to connect to key manager"
      default:
        type: "object"
        example: "admin"
        properties: {}
      values:
        type: "array"
        items:
          type: "object"
          properties: {}
    title: "Key Manager Configuration"
  KeyManagerList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Key managers returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/KeyManagerInfo"
    title: "Key Manager List"
  ClaimMappingEntry:
    properties:
      remoteClaim:
        type: "string"
        example: "http://idp.org/username"
      localClaim:
        type: "string"
        example: "http://wso2.org/username"
    title: "Claim Mapping Configuration"
  TokenValidation:
    properties:
      id:
        type: "integer"
      enable:
        type: "boolean"
        example: false
        default: true
      type:
        type: "string"
        enum:
          - "REFERENCE"
          - "JWT"
          - "CUSTOM"
      value:
        type: "object"
        properties: {}
    title: "Token handling Configuration"
  ScopeSettings:
    properties:
      name:
        type: "string"
    title: "Settings"
  AlertTypesList:
    properties:
      count:
        type: "integer"
        example: 3
        description: "The number of alerts"
      alerts:
        type: "array"
        items:
          $ref: "#/definitions/AlertType"
    title: "Alert Types List"
  AlertType:
    properties:
      id:
        type: "string"
        example: "1"
        description: "The alert Id"
      name:
        type: "string"
        example: "AbnormalRequestTime"
        description: "The name of the alert."
    title: "Alert Type"
  AlertsSubscription:
    properties:
      alerts:
        type: "array"
        items:
          $ref: "#/definitions/AlertType"
      emailList:
        type: "array"
        items:
          type: "string"
          example: "admin@wso2.com"
    title: "Alerts Subscription"
  BotDetectionAlertSubscriptionList:
    properties:
      count:
        type: "integer"
        example: 3
        description: "Number of Bot Detection Alert Subscriptions returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/BotDetectionAlertSubscription"
    title: "Bot Detection Alert Subscription List"
  BotDetectionAlertSubscription:
    required:
      - "email"
    properties:
      uuid:
        type: "string"
        example: "urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65"
        description: "UUID of the subscription"
      email:
        type: "string"
        example: "abc@.com"
        description: "email"
    title: "Bot Detection Alert Subscription"
  WorkflowList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of workflow processes returned.\n"
      next:
        type: "string"
        example: "/workflows?limit=1&offset=2&user="
        description: "Link to the next subset of resources qualified.\nEmpty if no\
          \ more resources are to be returned.\n"
      previous:
        type: "string"
        example: "/workflows?limit=1&offset=0&user="
        description: "Link to the previous subset of resources qualified.\nEmpty if\
          \ current subset is the first subset returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowInfo"
    title: "WorkflowList"
  WorkflowInfo:
    properties:
      workflowType:
        type: "string"
        example: "APPLICATION_CREATION"
        description: "Type of the Workflow Request. It shows which type of request\
          \ is it.\n"
        enum:
          - "APPLICATION_CREATION"
          - "SUBSCRIPTION_CREATION"
          - "USER_SIGNUP"
          - "APPLICATION_REGISTRATION_PRODUCTION"
          - "APPLICATION_REGISTRATION_SANDBOX"
          - "APPLICATION_DELETION"
          - "API_STATE"
          - "SUBSCRIPTION_DELETION"
          - "SUBSCRIPTION_UPDATE"
      workflowStatus:
        type: "string"
        example: "APPROVED"
        description: "Show the Status of the the workflow request whether it is approved\
          \ or created.\n"
        enum:
          - "APPROVED"
          - "CREATED"
      createdTime:
        type: "string"
        example: "2020-02-10 10:10:19.704"
        description: "Time of the the workflow request created.\n"
      updatedTime:
        type: "string"
        example: "2020-02-10 10:10:19.704"
        description: "Time of the the workflow request updated.\n"
      referenceId:
        type: "string"
        example: "5871244b-d6f3-466e-8995-8accd1e64303"
        description: "Workflow external reference is used to identify the workflow\
          \ requests uniquely.\n"
      properties:
        type: "object"
        properties: {}
      description:
        type: "string"
        example: "Approve application [APP1] creation request from application creator\
          \ - admin with throttling tier - 10MinPer"
        description: "description is a message with basic details about the workflow\
          \ request.\n"
    title: "Workflow info object with basic workflow details"
  WorkflowResponse:
    required:
      - "workflowStatus"
    properties:
      workflowStatus:
        type: "string"
        example: "APPROVED"
        description: "This attribute declares whether this workflow task is approved\
          \ or rejected.\n"
        enum:
          - "CREATED"
          - "APPROVED"
          - "REJECTED"
          - "REGISTERED"
      jsonPayload:
        type: "string"
        description: "Attributes that returned after the workflow execution\n"
    title: "workflow Response"
  BotDetectionDataList:
    properties:
      count:
        type: "integer"
        example: 1
        description: "Number of Bot Detection Data returned.\n"
      list:
        type: "array"
        items:
          $ref: "#/definitions/BotDetectionData"
    title: "Bot Detection Data List"
  BotDetectionData:
    properties:
      recordedTime:
        type: "integer"
        format: "int64"
        example: 1591734138413
        description: "The time of detection"
      messageID:
        type: "string"
        example: "urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65"
        description: "The message ID"
      apiMethod:
        type: "string"
        example: "GET"
        description: "The api method"
      headerSet:
        type: "string"
        example: "[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]"
        description: "The header set"
      messageBody:
        type: "string"
        example: "<soapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\
          \"/>"
        description: "The content of the message body"
      clientIp:
        type: "string"
        example: "127.0.0.1"
        description: "The IP of the client"
    title: "Bot Detection Data"
  RoleAliasList:
    properties:
      count:
        type: "integer"
        example: 3
        description: "The number of role aliases"
      list:
        type: "array"
        items:
          $ref: "#/definitions/RoleAlias"
    title: "Role alias list"
  RoleAlias:
    properties:
      role:
        type: "string"
        example: "Internal/subscriber"
        description: "The original role"
      aliases:
        type: "array"
        example:
          - "Subscriber"
          - "Internal/subscriber"
        description: "The role mapping for role alias"
        items:
          type: "string"
    title: "Role alias"
parameters:
  username:
    name: "username"
    in: "query"
    description: "username of the new application owner\n"
    required: true
    type: "string"
  scopeName:
    name: "scopeName"
    in: "path"
    description: "scope name to be validated\n"
    required: true
    type: "string"
  labelId:
    name: "labelId"
    in: "path"
    description: "Label UUID\n"
    required: true
    type: "string"
  policyId:
    name: "policyId"
    in: "path"
    description: "Thorttle policy UUID\n"
    required: true
    type: "string"
  ruleId:
    name: "ruleId"
    in: "path"
    description: "Custom rule UUID\n"
    required: true
    type: "string"
  applicationId:
    name: "applicationId"
    in: "path"
    description: "Application UUID\n"
    required: true
    type: "string"
  conditionId:
    name: "conditionId"
    in: "path"
    description: "Blocking condition identifier\n"
    required: true
    type: "string"
  Accept:
    name: "Accept"
    in: "header"
    description: "Media types acceptable for the response. Default is application/json.\n"
    required: false
    type: "string"
    default: "application/json"
  Content-Type:
    name: "Content-Type"
    in: "header"
    description: "Media type of the entity in the body. Default is application/json.\n"
    required: true
    type: "string"
    default: "application/json"
  If-None-Match:
    name: "If-None-Match"
    in: "header"
    description: "Validator for conditional requests; based on the ETag of the formerly\
      \ retrieved\nvariant of the resource (Will be supported in future).\n"
    required: false
    type: "string"
  If-Modified-Since:
    name: "If-Modified-Since"
    in: "header"
    description: "Validator for conditional requests; based on Last Modified header\
      \ of the\nformerly retrieved variant of the resource (Will be supported in future).\n"
    required: false
    type: "string"
  If-Match:
    name: "If-Match"
    in: "header"
    description: "Validator for conditional requests; based on ETag (Will be supported\
      \ in future).\n"
    required: false
    type: "string"
  If-Unmodified-Since:
    name: "If-Unmodified-Since"
    in: "header"
    description: "Validator for conditional requests; based on Last Modified header\
      \ (Will be supported in future).\n"
    required: false
    type: "string"
  limit:
    name: "limit"
    in: "query"
    description: "Maximum size of resource array to return.\n"
    required: false
    type: "integer"
    default: 25
  offset:
    name: "offset"
    in: "query"
    description: "Starting point within the complete list of items qualified.\n"
    required: false
    type: "integer"
    default: 0
  mediationPolicyId:
    name: "mediationPolicyId"
    in: "path"
    description: "Mediation policy Id\n"
    required: true
    type: "string"
  user:
    name: "user"
    in: "query"
    description: "username of the application creator\n"
    required: false
    type: "string"
  workflowReferenceId-Q:
    name: "workflowReferenceId"
    in: "query"
    description: "Workflow reference id\n"
    required: true
    type: "string"
  apiCategoryId:
    name: "apiCategoryId"
    in: "path"
    description: "API Category UUID\n"
    required: true
    type: "string"
  keyManagerId:
    name: "keyManagerId"
    in: "path"
    description: "Key Manager UUID\n"
    required: true
    type: "string"
