{
  "DOI": {
    "description": "Digital object identifier (modern Crossref DOIs version)",
    "type": "string",
    "pattern": "^10.\\d{4,9}/[-.;()/:\\w]+$"
  },
  "Organization": {
    "description": "Entity that produced the data or provided the associated metadata",
    "type": "object",
    "required": [
      "organization_id",
      "organization_name"
    ],
    "properties": {
      "organization_id": {
        "description": "Unique identifier of the organization in RUDI system",
        "type": "string",
        "format": "uuid"
      },
      "organization_name": {
        "description": "Updated offical name of the organization",
        "type": "string"
      },
      "organization_address": {
        "description": "Updated offical postal address of the organization",
        "type": "string"
      }
    }
  },
  "Contact": {
    "description": "Address to get further information on the resource",
    "type": "object",
    "required": [
      "contact_id",
      "contact_name",
      "email"
    ],
    "properties": {
      "contact_id": {
        "type": "string",
        "format": "uuid"
      },
      "organization_name": {
        "description": "Updated offical name of the organization",
        "type": "string"
      },
      "contact_name": {
        "description": "Updated name of the service, or possibly the person",
        "type": "string"
      },
      "role": {
        "description": "Updated status of the contact person",
        "type": "string",
        "example": "Administrator"
      },
      "email": {
        "description": "E-mail address, possibly not nominative to be less dependent on changes in the organization, and comply more easily with RGPD rules\n",
        "type": "string",
        "format": "email"
      }
    }
  },
  "Licence": {
    "description": "Abstract object from which standard and custom licences inherit",
    "type": "object",
    "required": [
      "licence_type"
    ],
    "properties": {
      "licence_type": {
        "type": "string",
        "enum": [
          "STANDARD",
          "CUSTOM"
        ]
      }
    },
    "discriminator": {
      "propertyName": "licence_type",
      "mapping": {
        "STANDARD": "#/components/schemas/LicenceStandard",
        "CUSTOM": "#/components/schemas/LicenceCustom"
      }
    }
  },
  "LicenceStandard": {
    "allOf": [
      {
        "$ref": "#/components/schemas/Licence"
      },
      {
        "description": "Standard licence (recognized by RUDI system)",
        "type": "object",
        "required": [
          "licence_label"
        ],
        "properties": {
          "licence_label": {
            "description": "Value of the field SkosConcept.concept_code",
            "type": "string",
            "format": "skosConceptCode"
          }
        }
      }
    ]
  },
  "LicenceCustom": {
    "allOf": [
      {
        "$ref": "#/components/schemas/Licence"
      },
      {
        "description": "Custom licence",
        "type": "object",
        "required": [
          "custom_licence_label",
          "custom_licence_uri"
        ],
        "properties": {
          "custom_licence_label": {
            "description": "Title of the custom licence",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictionaryEntry"
            }
          },
          "custom_licence_uri": {
            "description": "URL towards the custom licence",
            "type": "string",
            "format": "URI"
          }
        }
      }
    ]
  },
  "Media": {
    "description": "Abstract object from which File and Series inherit",
    "type": "object",
    "required": [
      "media_type",
      "media_id",
      "connector"
    ],
    "properties": {
      "media_type": {
        "description": "Transmission mode (file | series)",
        "type": "string",
        "enum": [
          "FILE",
          "SERIES"
        ]
      },
      "media_id": {
        "type": "string",
        "format": "uuid"
      },
      "media_name": {
        "type": "string"
      },
      "connector": {
        "$ref": "#/components/schemas/Connector"
      }
    },
    "discriminator": {
      "propertyName": "media_type",
      "mapping": {
        "FILE": "#/components/schemas/MediaFile",
        "SERIES": "#/components/schemas/MediaSeries"
      }
    }
  },
  "MediaFile": {
    "allOf": [
      {
        "$ref": "#/components/schemas/Media"
      },
      {
        "description": "Description of the container of data as a file",
        "type": "object",
        "required": [
          "file_type",
          "file_size",
          "checksum"
        ],
        "properties": {
          "file_type": {
            "$ref": "#/components/schemas/MediaType"
          },
          "file_size": {
            "description": "Size of the file, in bytes (determined automatically)\n",
            "type": "integer"
          },
          "checksum": {
            "description": "Hash that makes it possible to check the a file intergrity (determined automatically)",
            "type": "object",
            "required": [
              "algo",
              "hash"
            ],
            "properties": {
              "algo": {
                "$ref": "#/components/schemas/HashAlgorithm"
              },
              "hash": {
                "type": "string"
              }
            }
          },
          "file_structure": {
            "description": "Link towards the resource that describes the structure of the data (language, norm, data structure, JSON schema, OpenAPI, etc.)\n",
            "type": "string",
            "format": "URI"
          },
          "file_encoding": {
            "description": "Source encoding of the data (determined automatically)",
            "type": "string"
          }
        }
      }
    ]
  },
  "MediaSeries": {
    "allOf": [
      {
        "$ref": "#/components/schemas/Media"
      },
      {
        "description": "Description of the container of data as a file",
        "type": "object",
        "properties": {
          "latency": {
            "description": "Theorical delay between the production of the record and its availability, in milliseconds.\n",
            "type": "integer",
            "minimum": 0
          },
          "period": {
            "description": "Theorical delay between the production of two records, in milliseconds.",
            "type": "integer",
            "minimum": 0
          },
          "current_number_of_records": {
            "description": "Actual number of records",
            "type": "integer",
            "minimum": 0
          },
          "current_size": {
            "description": "Actual size of the data, in bytes (refreshed automatically)",
            "type": "integer",
            "minimum": 0
          },
          "total_number_of_records": {
            "description": "Estimated total number of records",
            "type": "integer",
            "minimum": 0
          },
          "total_size": {
            "description": "Estimated total size of the data, in bytes",
            "type": "integer",
            "minimum": 0
          }
        }
      }
    ]
  },
  "Connector": {
    "description": "Direct access to the dataset. In the case of open data without access restriction, this can be a simple download link e.g. a URL The interface contract chosen can enable request with specified parameters, or make it possible to extract a GeoWMS or a GeoWFS If it is not defined, the link should be a direct download link.\n",
    "type": "object",
    "required": [
      "url",
      "interface_contract"
    ],
    "properties": {
      "url": {
        "type": "string",
        "format": "URI"
      },
      "interface_contract": {
        "description": "Link towards the interface contract defined with RUDI Portal",
        "type": "string"
      }
    }
  },
  "MediaType": {
    "description": "Most common Media types formerly known as MIME types, as definied in RFC 2049\n",
    "type": "string",
    "enum": [
      "application/x-executable",
      "application/graphql",
      "application/javascript",
      "application/json",
      "application/ld+json",
      "application/msword",
      "application/pdf",
      "application/sql",
      "application/vnd.api+json",
      "application/vnd.ms-excel",
      "application/vnd.ms-powerpoint",
      "application/vnd.oasis.opendocument.text",
      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      "application/x-www-form-urlencoded",
      "application/xml",
      "application/zip",
      "application/zstd",
      "audio/mpeg",
      "audio/ogg",
      "image/gif",
      "image/apng",
      "image/flif",
      "image/webp",
      "image/x-mng",
      "image/jpeg",
      "image/png",
      "multipart/form-data",
      "text/css",
      "text/csv",
      "text/html",
      "text/php",
      "text/plain",
      "text/xml"
    ]
  },
  "FileExtension": {
    "description": "Source format of the data",
    "type": "string",
    "enum": [
      "csv",
      "doc",
      "docx",
      "jpg",
      "json",
      "odt",
      "pdf",
      "png",
      "ppt",
      "pptx",
      "txt",
      "xls",
      "xlsx",
      "xml"
    ]
  },
  "HashAlgorithm": {
    "description": "Method for computing the integrity hash of the data",
    "type": "string",
    "enum": [
      "MD5",
      "SHA-256",
      "SHA-512"
    ]
  },
  "Theme": {
    "description": "Category for thematic classification of the data",
    "type": "string"
  },
  "Keyword": {
    "description": "Tags to help researching the data",
    "type": "string"
  },
  "Date": {
    "description": "Date in the ISO 8601 format",
    "type": "string",
    "format": "date-time"
  },
  "ReferenceDates": {
    "description": "Dates of the actions on the data",
    "type": "object",
    "required": [
      "created",
      "updated"
    ],
    "properties": {
      "created": {
        "$ref": "#/components/schemas/Date"
      },
      "validated": {
        "$ref": "#/components/schemas/Date"
      },
      "published": {
        "$ref": "#/components/schemas/Date"
      },
      "updated": {
        "$ref": "#/components/schemas/Date"
      },
      "deleted": {
        "$ref": "#/components/schemas/Date"
      }
    }
  },
  "DictionaryList": {
    "type": "object",
    "required": [
      "lang",
      "text"
    ],
    "properties": {
      "lang": {
        "$ref": "#/components/schemas/Language"
      },
      "text": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "example": {
      "lang": "fr-FR",
      "text": [
        "abeilles",
        "Apis"
      ]
    }
  },
  "DictionaryEntry": {
    "type": "object",
    "required": [
      "lang",
      "text"
    ],
    "properties": {
      "lang": {
        "$ref": "#/components/schemas/Language"
      },
      "text": {
        "type": "string"
      }
    },
    "example": {
      "lang": "fr-FR",
      "text": "abeilles"
    }
  },
  "Language": {
    "description": "Lowercase ISO-639 language code followed by the uppercase 2 letter ISO 3166-1 alpha-2 country code, both joined by an hyphen-minus sign, or alternatively the lowercase ISO-639 language code alone\n",
    "type": "string",
    "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
    "enum": [
      "cs-CZ",
      "da-DK",
      "de-CH",
      "de-DE",
      "en-GB",
      "en-US",
      "el-GR",
      "es-ES",
      "fr-FR",
      "hu-HU",
      "it-IT",
      "no-NO",
      "pl-PL",
      "pt-PT",
      "ro-RO",
      "ru-RU",
      "sk-SK",
      "cs",
      "da",
      "de",
      "en",
      "el",
      "es",
      "fr",
      "hu",
      "it",
      "no",
      "pl",
      "pt",
      "ro",
      "ru",
      "sk"
    ]
  },
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "required": [
    "global_id",
    "resource_title",
    "synopsis",
    "summary",
    "theme",
    "keywords",
    "producer",
    "contacts",
    "available_formats",
    "dataset_dates",
    "storage_status",
    "access_condition",
    "metadata_info"
  ],
  "properties": {
    "global_id": {
      "description": "Identifiant du jeu de données dans Rudi, Universally unique identifier v4 format",
      "type": "string",
      "format": "uuid"
    },
    "local_id": {
      "description": "Identifier in the data producer system",
      "type": "string",
      "example": "2020.11-Laennec-AQMO-air quality sensors measures"
    },
    "doi": {
      "$ref": "#/components/schemas/DOI"
    },
    "dataverse_doi": {
      "description": "Digital object identifier (modern Crossref DOIs version) generated by dataverse",
      "type": "string",
      "pattern": "^doi:10\\.\\d{4,9}/[-.;()/:\\w]+$"
    },
    "resource_title": {
      "description": "Simple name for the resource",
      "type": "string",
      "maxLength": 150,
      "example": "Données de capteurs de la qualité de l'air, novembre 2020, Laënnec"
    },
    "synopsis": {
      "description": "Short description for the whole dataset",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/DictionaryEntry"
      },
      "minItems": 1
    },
    "summary": {
      "description": "More precise description for the whole dataset",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/DictionaryEntry"
      },
      "minItems": 1
    },
    "theme": {
      "$ref": "#/components/schemas/Theme"
    },
    "keywords": {
      "description": "List of tags that can be used to retrieve the data",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Keyword"
      }
    },
    "producer": {
      "$ref": "#/components/schemas/Organization"
    },
    "contacts": {
      "description": "Address to ask details on the dataset and its production",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Contact"
      }
    },
    "available_formats": {
      "description": "Available formats",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Media"
      },
      "minItems": 1
    },
    "resource_languages": {
      "description": "Languages available in the dataset, if relevant",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Language"
      },
      "default": [
        "fr"
      ]
    },
    "temporal_spread": {
      "description": "Period of time described by the data. If the end date is not known (because the resource is still valid in the present for instance, the end_date field will be left blank) For a one-time measurement, one can fill both start and end date with the same value.\n",
      "type": "object",
      "required": [
        "start_date"
      ],
      "properties": {
        "start_date": {
          "$ref": "#/components/schemas/Date"
        },
        "end_date": {
          "$ref": "#/components/schemas/Date"
        }
      }
    },
    "geography": {
      "description": "Geographic localisation of the data",
      "type": "object",
      "required": [
        "bounding_box"
      ],
      "properties": {
        "bounding_box": {
          "description": "Geographic distribution of the data as a rectangle. The 4 parameters are given as decimal as described in the norm ISO 6709\n",
          "type": "object",
          "required": [
            "west_longitude",
            "east_longitude",
            "north_latitude",
            "south_latitude"
          ],
          "properties": {
            "north_latitude": {
              "description": "Northernmost latitude given as a decimal number (norm ISO 6709)",
              "type": "number",
              "minimum": -90,
              "maximum": 90
            },
            "south_latitude": {
              "description": "Southernmost latitude (decimal number, norm ISO 6709)",
              "type": "number",
              "minimum": -90,
              "maximum": 90
            },
            "west_longitude": {
              "description": "Westernmost latitude (decimal number, norm ISO 6709)",
              "type": "number",
              "minimum": -180,
              "maximum": 180
            },
            "east_longitude": {
              "description": "Easternmost latitude (decimal number, norm ISO 6709)",
              "type": "number",
              "minimum": -180,
              "maximum": 180
            }
          }
        },
        "geographic_distribution": {
          "allOf": [
            {
              "$ref": "geojson.yml#/components/schemas/GeoJsonObject"
            },
            {
              "description": "Precise geographic distribution of the data",
              "type": "object"
            }
          ]
        },
        "projection": {
          "description": "Cartographic projection used to describe the data",
          "type": "string",
          "default": "WGS 84",
          "example": "WGS 84 (EPSG:4326)"
        }
      }
    },
    "dataset_size": {
      "description": "Indicative total size of the data",
      "type": "object",
      "properties": {
        "numbers_of_records": {
          "type": "integer",
          "minimum": 0
        },
        "number_of_fields": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "dataset_dates": {
      "allOf": [
        {
          "$ref": "#/components/schemas/ReferenceDates"
        },
        {
          "description": "Dates of the actions performed on the data (creation, publishing, update, deletion...)",
          "type": "object"
        }
      ]
    },
    "storage_status": {
      "description": "Status of the storage of the dataset Metadata can exist without the data - online      = data are published and available - archived    = data are not immediately available, access is not automatic - unavailable = data were deleted",
      "type": "string",
      "enum": [
        "online",
        "archived",
        "unavailable"
      ]
    },
    "access_condition": {
      "description": "Access restrictions for the use of data in the form of licence, confidentiality, terms of service, habilitation or required rights, economical model. Default is open licence. #TODO: to be defined. Possible redundencies with other fields!\n",
      "type": "object",
      "required": [
        "licence"
      ],
      "properties": {
        "confidentiality": {
          "description": "Restriction level for the resource",
          "type": "object",
          "properties": {
            "restricted_access": {
              "description": "True if the dataset has a restricted access. False for open data\n",
              "type": "boolean"
            },
            "gdpr_sensitive": {
              "description": "True if the dataset embeds personal data\n",
              "type": "boolean"
            }
          }
        },
        "licence": {
          "$ref": "#/components/schemas/Licence"
        },
        "usage_constraint": {
          "description": "Describes how constrained is the use of the resource\n",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DictionaryEntry"
          },
          "example": [
            {
              "lang": "fr",
              "text": "Usage libre sous réserve des mentions obligatoires sur tout document de diffusion"
            }
          ]
        },
        "bibliographical_reference": {
          "description": "Information that MUST be cited every time the data is used, most likely a BibTeX entry\n",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DictionaryEntry"
          }
        },
        "mandatory_mention": {
          "description": "Mention that must be cited verbatim in every publication that makes use of the data\n",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DictionaryEntry"
          },
          "minItems": 1,
          "example": [
            {
              "lang": "fr-FR",
              "text": "Source: Région Bretagne"
            }
          ]
        },
        "access_constraint": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DictionaryEntry"
          }
        },
        "other_constraints": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DictionaryEntry"
          },
          "example": [
            {
              "lang": "fr",
              "text": "Pas de restriction d'accès public"
            }
          ]
        }
      }
    },
    "metadata_info": {
      "description": "Metadata on the metadata",
      "type": "object",
      "required": [
        "api_version"
      ],
      "properties": {
        "api_version": {
          "type": "string",
          "pattern": "([0-9]{1,2}\\.){2}[0-9]{1,2}[a-z]*"
        },
        "metadata_dates": {
          "$ref": "#/components/schemas/ReferenceDates"
        },
        "metadata_provider": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Organization"
            },
            {
              "description": "Description of the organization that produced the metadata",
              "type": "object"
            }
          ]
        },
        "metadata_contacts": {
          "description": "Addresses to get further information on the metadata",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      }
    }
  },
  "title": "RUDI PRODUCER Metadata",
  "$id": "C:\\Users\\MLA20849\\Projets\\RUDI\\git\\rudi\\rudi-facet\\rudi-facet-kaccess\\src\\main\\resources\\openapi\\RUDI-PRODUCER.yml"
}
