openapi: 3.0.0
info:
  description: API Public Template Rudi
  version: 0.0.1
  title: rudi-template-api
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: ca.marchand@rennesmetropole.fr
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths: {}
components:
  schemas:
    SearchItemInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SearchType'
        name:
          type: string
        url:
          type: string
        image_url:
          type: string
      discriminator:
        propertyName: type
        mapping:
          dataset: '#/components/schemas/SearchDatasetInfo'
          dataverse: '#/components/schemas/SearchDataverseInfo'
    SearchType:
      type: string
      enum:
        - dataset
        - dataverse
    SearchDatasetInfo:
      allOf:
        - $ref: '#/components/schemas/SearchItemInfo'
        - type: object
          properties:
            global_id:
              type: string
            description:
              type: string
            published_at:
              type: string
              format: date-time
            publisher:
              type: string
            name_of_dataverse:
              type: string
            subjects:
              type: array
              items:
                type: string
            fileCount:
              type: integer
            authors:
              type: array
              items:
                type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/SearchContactInfo'
    SearchDataverseInfo:
      allOf:
        - $ref: '#/components/schemas/SearchItemInfo'
        - type: object
          properties:
            identifier:
              type: string
            description:
              type: string
            published_at:
              type: string
              format: date-time
    SearchContactInfo:
      type: object
      properties:
        name:
          type: string
        affiliation:
          type: string
    Identifier:
      type: object
      properties:
        id:
          type: integer
          format: int64
        persistentId:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    Dataset:
      allOf:
        - $ref: '#/components/schemas/Identifier'
        - type: object
          properties:
            identifier:
              type: string
            protocol:
              type: string
            authority:
              type: string
            persistentUrl:
              type: string
            publisher:
              type: string
            publicationDate:
              type: string
              format: date
            datasetVersion:
              $ref: '#/components/schemas/DatasetVersion'
            latestVersion:
              $ref: '#/components/schemas/DatasetVersion'
    DatasetVersion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        datasetId:
          type: integer
          format: int64
        datasetPersistentId:
          type: string
        versionState:
          type: string
        createTime:
          type: string
          format: date-time
        lastUpdateTime:
          type: string
          format: date-time
        versionNumber:
          type: integer
        versionMinorNumber:
          type: integer
        metadataBlocks:
          $ref: '#/components/schemas/DatasetMetadataBlock'
    DatasetMetadataBlock:
      type: object
      properties:
        citation:
          $ref: '#/components/schemas/DatasetMetadataBlockElement'
        rudi:
          $ref: '#/components/schemas/DatasetMetadataBlockElement'
    DatasetMetadataBlockElement:
      type: object
      properties:
        displayName:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetMetadataBlockElementField'
    DatasetMetadataBlockElementField:
      type: object
      properties:
        typeName:
          type: string
        typeClass:
          $ref: '#/components/schemas/FieldTypeClass'
        multiple:
          type: boolean
        value:
          type: object
    FieldTypeClass:
      type: string
      enum:
        - primitive
        - compound
        - controlledVocabulary
    Metadata:
      type: object
      required:
        - global_id

        - resource_title
        - synopsis
        - summary

        - theme
        - keywords

        - producer
        - contacts

        - available_formats

        #- temporal_spread
        #- geography
        - dataset_dates
        - storage_status

        - access_condition

        - metadata_info

      properties:
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # RESOURCE IDENTIFICATION
        #——————————————————————————      
        global_id:
          description: Identifiant du jeu de données dans Rudi, Universally unique identifier v4 format
          type: string
          #pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i'
          format: uuid
        local_id:
          type: string
          description: Identifiant du jeu de données chez le producteur de données
          example: 2020.11-Laennec-AQMO-air quality sensors measures
        doi:
          $ref: '#/components/schemas/DOI'
        dataverse_doi:
          description: Digital object identifier (modern Crossref DOIs version) generated by dataverse
          type: string
          pattern: '^doi:10\.\d{4,9}/[-.;()/:\w]+$'
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # DATASET DESCRIPTION
        #——————————————————————————          
        resource_title:
          type: string
          maxLength: 150
          description: Nom de la resource
          example: 'Données de capteurs de la qualité de l''air, novembre 2020, Laënnec'
        synopsis:
          description: Short description for the whole dataset
          type: array
          items:
            $ref: '#/components/schemas/DictionaryEntry'
          minItems: 1
        summary:
          type: array
          items:
            $ref: '#/components/schemas/DictionaryEntry'
          minItems: 1
          description: 'More precise description for the whole dataset'
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # CLASSIFICATION
        #——————————————————————————
        theme:
          $ref: '#/components/schemas/Theme'
        keywords:
          description: List of tags that can be used to retrieve the data
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
          minItems: 1
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # INVOLVED PARTIES
        #—————————————————————————— 
        producer:
          $ref: '#/components/schemas/Organization'
        contacts:
          description: Address to ask details on the dataset and its production
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          minItems: 1
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # CONTAINER DESCRIPTION
        #——————————————————————————            
        available_formats:
          description: Available formats
          type: array
          items:
            $ref: '#/components/schemas/Media'
          minItems: 1
        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # DATASET INFO
        #——————————————————————————  
        'resource_languages':
          description: Languages available in the dataset, if relevant
          type: array
          items:
            $ref: '#/components/schemas/Language'
          default: [fr]
        #——————————————————————————
        'temporal_spread':
          description: >
            Period of time described by the data.
            If the end date is not known (because the resource is still valid in
            the present for instance, the end_date field will be left blank)
            For a one-time measurement, one can fill both start and end date 
            with the same value.
          type: object
          required:
            - start_date
          properties:
            #......................
            'start_date':
              $ref: '#/components/schemas/RudiDate'
            #......................
            'end_date':
              $ref: '#/components/schemas/RudiDate'
        #——————————————————————————
        'geography':
          description: Geographic localisation of the data
          type: object
          required:
            - bounding_box
          properties:
            #......................
            'bounding_box':
              description: >
                Geographic distribution of the data as a rectangle.
                The 4 parameters are given as decimal as described in the
                norm ISO 6709
              type: object
              required:
                - west_longitude
                - east_longitude
                - north_latitude
                - south_latitude
              properties:
                'north_latitude':
                  description:
                    Northernmost latitude given as a decimal number (norm ISO 6709)
                  type: number
                  minimum: -90
                  maximum: 90
                'south_latitude':
                  description: Southernmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -90
                  maximum: 90
                'west_longitude':
                  description: Westernmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -180
                  maximum: 180
                'east_longitude':
                  description: Easternmost latitude (decimal number, norm ISO 6709)
                  type: number
                  minimum: -180
                  maximum: 180
            #......................
            'geographic_distribution':
              $ref: 'geojson.yml#/components/schemas/GeoJsonObject'
            #......................
            'projection':
              description: Cartographic projection used to describe the data
              type: string
              example: 'WGS 84 (EPSG:4326)'
              # 'RGF93/Lambert-93 (EPSG:2154)'
              # 'RGF93/CC48 (EPSG:3948)'
              #TODO: 'Projection' thesaurus

        #——————————————————————————
        'dataset_size':
          $ref: '#/components/schemas/DatasetSize'

        #——————————————————————————
        'dataset_dates':
          $ref: '#/components/schemas/ReferenceDates'
        #          allOf:
        #            - description: Dates of the actions performed on the data (creation, publishing, update, deletion...)
        #              type: object
        #            - $ref: '#/components/schemas/ReferenceDates'

        #——————————————————————————   
        'storage_status':
          description: >-
            Status of the storage of the dataset
            Metadata can exist without the data
            - online      = data are published and available
            - archived    = data are not immediately available, access is not automatic
            - unavailable = data were deleted
          type: string
          enum: [online, archived, unavailable]
        # !SKOS!

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # ACCESS CONSTRAINTS
        #——————————————————————————
        'access_condition':
          description: >
            Access restrictions for the use of data in the form of licence,
            confidentiality, terms of service, habilitation or required rights,
            economical model. Default is open licence.
            #TODO: to be defined. Possible redundencies with other fields!
          type: object
          required:
            - licence
          properties:
            #......................
            'confidentiality':
              description: Restriction level for the resource
              type: object
              properties:
                'restricted_access':
                  description: >
                    True if the dataset has a restricted access.
                    False for open data
                  type: boolean
                'gdpr_sensitive':
                  description: >
                    True if the dataset embeds personal data
                  type: boolean
            #......................
            'licence':
              $ref: '#/components/schemas/Licence'
            #......................
            'usage_constraint':
              description: >
                Describes how constrained is the use of the resource
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              example:
                {
                  "lang": "fr",
                  "text": "Usage libre sous réserve des mentions obligatoires sur tout document de diffusion"
                }
            #......................
            'bibliographical_reference':
              description: >
                Information that MUST be cited every time the data is used,
                most likely a BibTeX entry
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
            #......................
            'mandatory_mention':
              description: >
                Mention that must be cited verbatim in every publication that
                makes use of the data
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              minItems: 1
              example:
                {
                  "lang": "fr-FR",
                  "text": "Source: Région Bretagne"
                }
            #......................
            'access_constraint':
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
            #......................
            'other_constraints':
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              example:
                {
                  "lang": "fr",
                  "text": "Pas de restriction d'accès public"
                }

        #—•—•—•—•—•—•—•—•—•—•—•—•—•
        # METADATA INFO
        #——————————————————————————
        'metadata_info':
          description: Metadata on the metadata
          type: object
          required:
            - api_version
          properties:
            #......................
            'api_version':
              type: string
            #......................
            'metadata_dates':
              $ref: '#/components/schemas/ReferenceDates'
            #......................
            'metadata_provider':
              $ref: '#/components/schemas/Organization'
            #              allOf:
            #              - description:
            #                  Description of the organization that produced the metadata
            #                type: object
            #              - $ref: '#/components/schemas/Organization'
            #......................
            'metadata_contacts':
              description:
                Addresses to get further information on the metadata
              type: array
              items:
                $ref: '#/components/schemas/Contact'

    #---------------------------------------------------------------------------
    MetadataList:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    #---------------------------------------------------------------------------
    MetadataListFacets:
      type: object
      properties:
        metadataList:
          $ref: '#/components/schemas/MetadataList'
        facets:
          $ref: '#/components/schemas/MetadataFacets'
    #---------------------------------------------------------------------------
    MetadataFacets:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFacet'
    #---------------------------------------------------------------------------
    MetadataFacet:
      type: object
      properties:
        propertyName:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFacetValues'
    #---------------------------------------------------------------------------
    MetadataFacetValues:
      type: object
      properties:
        value:
          type: string
        count:
          type: integer
    #---------------------------------------------------------------------------
    DOI:
      description:
        Digital object identifier (modern Crossref DOIs version)
      type: string
      pattern: '^10.\d{4,9}/[-.;()/:\w]+$'
      # \d : digit character == [0-9]
      # \w : word character == [0-9a-zA-Z_]
      # /i (at the end) : expression is case insensitive
      #source: https://www.crossref.org/blog/dois-and-matching-regular-expressions/
      #alternative: https://github.com/regexhq/doi-regex/blob/master/index.js  
    #---------------------------------------------------------------------------              
    Theme:
      description: Category for thematic classification of the data
      type: string
    #---------------------------------------------------------------------------      
    DictionaryEntry:
      type: object
      required:
        - lang
        - text
      properties:
        lang:
          $ref: '#/components/schemas/Language'
        text:
          type: string
      example:
        lang: fr-FR
        text: >-
          Données de capteurs de la qualité de l'air, nov. 2020, Laënnec,
          Rennes, France
    #---------------------------------------------------------------------------
    Language:
      description: >
        Lowercase ISO-639 language code followed by the
        uppercase 2 letter ISO 3166-1 alpha-2 country code,
        both joined by an hyphen-minus sign, or alternatively the 
        lowercase ISO-639 language code alone
      type: string
      pattern: '^[a-z]{2}(-[A-Z]{2})?$'
      enum: ['cs-CZ', 'da-DK', 'de-CH', 'de-DE', 'en-GB', 'en-US', 'el-GR',
             'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'no-NO', 'pl-PL', 'pt-PT', 'ro-RO',
             'ru-RU', 'sk-SK', 'cs', 'da', 'de', 'en', 'el', 'es', 'fr', 'hu', 'it',
             'no', 'pl', 'pt', 'ro', 'ru', 'sk']
    #---------------------------------------------------------------------------        
    Keyword:
      description: Tags to help researching the data
      type: string
    #---------------------------------------------------------------------------
    'RudiDate':
      description: 'Date in the ISO 8601 format'
      type: string
      format: 'date-time'
      #TODO: timezone + nanosec?      

    #---------------------------------------------------------------------------
    'ReferenceDates':
      description: 'Dates of the actions on the data'
      type: object
      required:
        - created
        - updated
      properties:
        'created':
          $ref: '#/components/schemas/RudiDate'
        'validated':
          $ref: '#/components/schemas/RudiDate'
        'published':
          $ref: '#/components/schemas/RudiDate'
        'updated':
          $ref: '#/components/schemas/RudiDate'
        'deleted':
          $ref: '#/components/schemas/RudiDate'

    #---------------------------------------------------------------------------        
    Organization:
      description: Entity that produced the data or provided the associated metadata
      type: object
      required:
        - organization_id
        - organization_name
      properties:
        #——————————————————————————      
        organization_id:
          description: Unique identifier of the organization in RUDI system
          type: string
          format: uuid
        #——————————————————————————             
        organization_name:
          description: Updated offical name of the organization
          type: string
        #——————————————————————————          
        organization_address:
          description: Updated offical postal address of the organization
          type: string
    #---------------------------------------------------------------------------          
    Contact:
      description: Address to get further information on the resource
      type: object
      required:
        - contact_id
        - contact_name
        - email
      properties:
        #——————————————————————————      
        contact_id:
          type: string
          format: uuid
        #——————————————————————————          
        organization_name:
          description: Updated offical name of the organization
          type: string
        #——————————————————————————          
        contact_name:
          description: 'Updated name of the service, or possibly the person'
          type: string
        #——————————————————————————          
        role:
          description: Updated status of the contact person
          type: string
          example: Administrator
        #——————————————————————————          
        email:
          description: >
            E-mail address, possibly not nominative to be less dependent on
            changes in the organization, and comply more easily with RGPD rules
          type: string
          format: email
          example: contact@rudi.fr
    #---------------------------------------------------------------------------
    'Licence':
      description: Abstract object that gather standard and custom licences
      type: object
      required:
        - licence_type
      properties:
        #——————————————————————————
        'licence_type':
          type: string
          enum: ['STANDARD', 'CUSTOM']

      discriminator:
        propertyName: licence_type
        mapping:
          'STANDARD': '#/components/schemas/LicenceStandard'
          'CUSTOM': '#/components/schemas/LicenceCustom'

    #---------------------------------------------------------------------------
    'LicenceStandard':
      allOf:
        - $ref: "#/components/schemas/Licence"
        - description: Standard license (recognized by RUDI system)
          type: object
          required:
            - licence_label
          properties:
            'licence_label':
              description: Value of the field SkosConcept.concept_code
              type: string
              format: skosConceptCode

      #---------------------------------------------------------------------------
    'LicenceCustom':
      allOf:
        - $ref: "#/components/schemas/Licence"
        - description: Custom license
          type: object
          required:
            - custom_licence_label
            - custom_licence_uri
          properties:
            'custom_licence_label':
              description: Title of the custom licence
              type: array
              items:
                $ref: '#/components/schemas/DictionaryEntry'
              minItems: 1
            'custom_licence_uri':
              description: URL towards the custom licence
              type: string
              format: uri
    #---------------------------------------------------------------------------
    'Media':
      description: Abstract object from which File and Series inherit
      type: object
      required:
        - media_type
        - media_id
        - connector
      properties:
        #——————————————————————————
        'media_type':
          description: Transmission mode (file | series)
          type: string
          enum: ['FILE', 'SERIES']
        #——————————————————————————
        'media_id':
          type: string
          format: uuid
        #——————————————————————————
        'connector':
          $ref: '#/components/schemas/Connector'

      discriminator:
        propertyName: media_type
        mapping:
          'FILE': '#/components/schemas/MediaFile'
          'SERIES': '#/components/schemas/MediaSeries'
    #---------------------------------------------------------------------------
    'MediaFile':
      allOf:
        - $ref: '#/components/schemas/Media'
        - description: Description of the container of data as a file
          type: object
          required:
            - file_size
            - file_type
            - checksum
          properties:
            #——————————————————————————
            'file_structure':
              description: >
                Link towards the resource that describes the structure of the data
                (language, norm, data structure, JSON schema, OpenAPI, etc.)
              type: string
              format: uri
              #'URI definition - https://tools.ietf.org/html/rfc2396'

            #——————————————————————————
            'file_size':
              description: >
                Size of the file, in bytes
                (determined automatically)
              type: integer

            #——————————————————————————
            'file_type':
              # File type (determined automatically)
              $ref: '#/components/schemas/MediaType'

            #——————————————————————————
            'file_encoding':
              description:
                Source encoding of the data
                (determined automatically)
              type: string
              #format:
              #ISO/CEI 10646'
              #TODO: thesaurus for encoding

            #——————————————————————————
            'checksum':
              description:
                Hash that makes it possible to check the a file intergrity
                (determined automatically)
              type: object
              required:
                - algo
                - hash
              properties:
                'algo':
                  $ref: '#/components/schemas/HashAlgorithm'
                'hash':
                  type: string

    #---------------------------------------------------------------------------
    'MediaSeries':
      allOf:
        - $ref: '#/components/schemas/Media'
        - description: Description of the container of data as a file
          type: object
          properties:
            #——————————————————————————
            'latency':
              description: >
                Theorical delay between the production of the record and its availability,
                in milliseconds. Applies to temporal series of data.
              type: integer
              minimum: 0

            #——————————————————————————
            'period':
              description: >
                Theorical delay between the production of two records, in milliseconds.
                Applies to temporal series of data.
              type: integer
              minimum: 0

            #——————————————————————————
            'current_number_of_records':
              description: Actual number of records
              type: integer
              minimum: 0

            #——————————————————————————
            'current_size':
              description:
                Actual size of the data, in bytes (refreshed automatically)
              type: integer

            #——————————————————————————
            'total_number_of_records':
              description: Estimated total number of records
              type: integer
              minimum: 0

            #——————————————————————————
            'total_size':
              description:
                Estimated total size of the data, in bytes
              type: integer

    #---------------------------------------------------------------------------
    'Connector':
      description: >
        Direct access to the dataset.
        In the case of open data without access restriction, this can be a 
        simple download link e.g. a URL
        The interface contract chosen can enable request with specified
        parameters, or make it possible to extract a GeoWMS or a GeoWFS
        If it is not defined, the link should be a direct download link.
      type: object
      required:
        - url
        - interface_contract
      properties:
        #——————————————————————————
        'url':
          type: string
          format: uri
        #——————————————————————————
        'interface_contract':
          description: Link towards the interface contract defined with RUDI Portal
          type: string

    #---------------------------------------------------------------------------
    'MediaType':
      description: >
        Most common Media types formerly known as MIME types, as definied in 
        RFC 2049
      type: string
      enum:
        - 'application/epub+zip'
        - 'application/geo+json'
        - 'application/graphql'
        - 'application/gzip'
        - 'application/javascript'
        - 'application/json'
        - 'application/ld+json'
        - 'application/msword'
        - 'application/octet-stream'
        - 'application/pdf'
        - 'application/sql'
        - 'application/vnd.api+json'
        - 'application/vnd.ms-excel'
        - 'application/vnd.ms-powerpoint'
        - 'application/vnd.oasis.opendocument.presentation'
        - 'application/vnd.oasis.opendocument.spreadsheet'
        - 'application/vnd.oasis.opendocument.text'
        - 'application/vnd.openxmlformats-officedocument.presentationml.presentation'
        - 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        - 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
        - 'application/x-7z-compressed'
        - 'application/x-bzip'
        - 'application/x-bzip2'
        - 'application/x-executable'
        - 'application/x-tar'
        - 'application/x-www-form-urlencoded'
        - 'application/xml'
        - 'application/zip'
        - 'application/zstd'
        - 'audio/aac'
        - 'audio/m4a'
        - 'audio/mpeg'
        - 'audio/ogg'
        - 'audio/wav'
        - 'audio/webm'
        - 'font/otf'
        - 'font/ttf'
        - 'image/apng'
        - 'image/bmp'
        - 'image/flif'
        - 'image/gif'
        - 'image/jpeg'
        - 'image/png'
        - 'image/tiff'
        - 'image/vnd.microsoft.icon'
        - 'image/webp'
        - 'image/x-mng'
        - 'multipart/form-data'
        - 'text/css'
        - 'text/csv'
        - 'text/html'
        - 'text/php'
        - 'text/plain'
        - 'text/xml'
        - 'video/3gpp'
        - 'video/mp4'
        - 'video/mpeg'
        - 'video/ogg'
        - 'video/quicktime'
        - 'video/webm'
        - 'video/x-matroska'
        - 'video/x-ms-wmv'
        - 'video/x-msvideo'

    #---------------------------------------------------------------------------
    'FileExtension':
      description: Source format of the data
      type: string
      enum:
        - '3gp'
        - '3gpp'
        - '7z'
        - aac
        - apng
        - avi
        - bin
        - bmp
        - bz
        - bz2
        - css
        - csv
        - doc
        - docx
        - epub
        - exe
        - flif
        - geojson
        - gif
        - gz
        - gzip
        - htm
        - html
        - ico
        - jpeg
        - jpg
        - js
        - json
        - jsonld
        - m4a
        - mkv
        - mng
        - mov
        - mp3
        - mp4
        - mpeg
        - mpg
        - odp
        - ods
        - odt
        - oga
        - ogg
        - ogv
        - otf
        - pdf
        - php
        - png
        - ppt
        - pptx
        - sql
        - tar
        - 'tar.bz'
        - 'tar.bz2'
        - 'tar.gz'
        - tgz
        - tif
        - tiff
        - ttf
        - txt
        - wav
        - weba
        - webm
        - webp
        - wmv
        - xls
        - xlsx
        - xml
        - zip
        - zst

    #---------------------------------------------------------------------------
    'HashAlgorithm':
      description: Method for computing the integrity hash of the data
      type: string
      enum: ['MD5', 'SHA-256', 'SHA-512']
    #---------------------------------------------------------------------------
    DatasetSize:
      description: Indicative size of the data
      type: object
      properties:
        #......................
        numbers_of_records:
          type: integer
          minimum: 0
        #......................          
        number_of_fields:
          type: integer
          minimum: 0

    #---------------------------------------------------------------------------
    DatasetSearchCriteria:
      description: Critère de recherche dans le dataset, notamment dans ses métadonnées
      type: object
      properties:
        globalId:
          description: Identifiant du jeu de données basé sur le datasetField global_id
          type: string
          format: uuid
        limit:
          type: integer
          description: Nombre d'élément maximum
        offset:
          type: integer
          description: Index de l'élément initial
        freeText:
          description: texte libre présent dans le titre ou dans le synopsis du jeu de données
          type: string
        keywords:
          description: Mots clés du jeu de données
          type: array
          items:
            type: string
        themes:
          description: Liste de thèmes (le thème du jeu de données doit correspondre à l'un de ces thèmes)
          type: array
          items:
            type: string
        producerNames:
          description: Liste de noms de producteurs (le nom du producteur du jeu de données doit correspondre à l'un de ces noms)
          type: array
          items:
            type: string
        dateDebut:
          description: Période temporelle min (temporal_spread.start_date)
          type: string
          format: date-time
        dateFin:
          description: Période temporelle max (temporal_spread.end_date)
          type: string
          format: date-time
        order:
          description: 'Liste des tris à réaliser. Valeurs possibles :  name, date, title, producername, updatedate. Mettre un signe - devant pour tri descendant (ex -name)'
          type: string
        restrictedAccess:
          description: Données ouvertes (false) ou restreintes (true)
          type: boolean
        doi:
          $ref: '#/components/schemas/DOI'
        localId:
          type: string
          description: Identifiant du jeu de données chez le producteur de données
          example: 2020.11-Laennec-AQMO-air quality sensors measures
