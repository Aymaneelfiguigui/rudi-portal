# ==== ACL service config (dev) ====
server.port=8085
server.ssl.enabled=false
trust.trust-all-certs=true

# --- Database ---
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=acl
spring.datasource.password=acl
spring.jpa.properties.hibernate.default_schema=acl_data
spring.jpa.show-sql=true
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none

# --- Eureka ---
eureka.client.enabled=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.nonSecurePortEnabled=true
eureka.instance.hostname=localhost
eureka.instance.securePortEnabled=false
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# --- JWT (must be identical across services that issue/validate tokens) ---
security.jwt.access.tokenKey=dev-ultra-long-hs512-secret-0123456789abcdef-0123456789abcdef-0123456789abcdef-0123456789abcdef

# Use a persistent RSA keypair for OAuth2 JWT signing (so JWKS does not change on restart)
# This avoids mismatches for clients caching the key by kid.
security.jwt.keystore=/root/rudi-out-of-the-box/config/acl/rudi-https-certificate.jks
security.jwt.keystore.password=rudissl
security.jwt.keystore.alias=rudi-https
## Optional: keep a stable kid (default is already a fixed UUID)
# security.jwt.kid=52702736-ceb9-4544-a37d-56e981877899

# --- OAuth2 ---
module.oauth2.trust-all-certs=true
module.oauth2.provider-uri=http://localhost:8085/oauth2/token
module.oauth2.check-token-uri=http://localhost:8085/oauth2/check_token
module.oauth2.client-id=acl   
module.oauth2.client-secret=rudi@123
module.oauth2.scope=read,write

# --- Misc ---

rudi.captcha.enabled=false

# SMTP (MailHog)
mail.transport.protocol=smtp
mail.smtp.host=147.210.218.43
mail.smtp.port=1025
mail.smtp.auth=false
mail.smtp.starttls.enable=false
mail.debug=true

mail.from=no-reply@rudi.local
mail.smtp.from=no-reply@rudi.local

rudi.mail.enabled=false

# required labels used in templates
email.projectName=RUDI
email.teamName=RUDI Team
email.urlServer=http://localhost:4200
email.urlContact=http://localhost:4200/contact

# freemarker override root (IMPORTANT: the code will read ${freemarker.baseDirectory}/templates/*.txt)
freemarker.baseDirectory=/opt/rudi_tmp


# extra logs
logging.level.org.rudi.facet.email=TRACE
logging.level.org.rudi.microservice.acl=TRACE
logging.level.freemarker=TRACE
logging.level.org.springframework.mail=TRACE
logging.level.com.sun.mail.smtp=DEBUG
logging.level.org.rudi.microservice.acl.service.account=TRACE
logging.level.org.rudi.microservice.acl.service.helper=TRACE
logging.level.freemarker.cache=TRACE
logging.level.com.sun.mail.smtp=DEBUG
# Show full stack traces
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n%ex{full}

# Links used in email templates
email.urlServer=http://localhost:4200
email.urlContact=http://localhost:4200/contact

# Captcha
rudi.captcha.enabled=false
rudi.captcha.client-id=NotUsedOnLocalhost
rudi.captcha.client-secret=NotUsedOnLocalhost
rudi.captcha.client-name=NotUsedOnLocalhost

# === Email content (required by EmailHelper) ===
email.projectName=RUDI
email.teamName=RUDI Team
email.urlServer=http://localhost:4200
email.urlContact=http://localhost:4200/contact

# Texts (used by the templates if defined)
# email.accountcreation.activation.subject=Account activation
# email.accountcreation.activation.body=Please activate your account:
# email.accountcreation.registration.subject=Account created
# email.accountcreation.registration.body=Welcome!
# email.resetpassword.subject=Reset password
# email.resetpassword.body=Reset your password:
# email.confirmationresetpassword.subject=Password changed
# email.confirmationresetpassword.body=Your password was changed.
