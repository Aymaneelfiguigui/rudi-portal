# Surcharger les paramÃ¨tres de "genius.properties"
server.port=8085

server.ssl.enabled=false
#server.ssl.key-store=...
#server.ssl.key-store-password=...
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=localhost-certificate
#server.ssl.key-password=....
#trust.store=${server.ssl.key-store}
#trust.store.password=${server.ssl.key-store-password}
trust.trust-all-certs=true

# Configuration BDD
##########################
spring.datasource.url=jdbc:postgresql://localhost:5433/rudi
spring.datasource.username=acl
spring.datasource.password=acl
spring.jpa.show-sql=true

# Génération du script par hibernate + jpa
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none
# Décommenter les lignes suivantes pour générer le fichier create_all_tables.sql à partir de toutes les Entity du projet
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=../rudi-microservice-acl-service/src/main/resources/bdd/create_all_tables.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# Configuration Eureka
##########################
#eureka.client.serviceURL.defaultZone=http(s)://...:...!@localhost:8761/eureka


eureka.instance.instance-id=${spring.application.name}:${random.uuid}
#eureka.instance.hostname=localhost
#eureka.instance.nonSecurePortEnabled=false
#eureka.instance.securePortEnabled=true

#eureka.client.tls.enabled=${server.ssl.enabled}
#eureka.client.tls.key-store=${server.ssl.key-store}
#eureka.client.tls.key-store-type=${server.ssl.key-store-type}
#eureka.client.tls.key-password=${server.ssl.key-password}
#eureka.client.tls.key-store-password=${server.ssl.key-store-password}
#eureka.client.tls.trust-store=${eureka.client.tls.key-store}
#eureka.client.tls.trust-store-password=${eureka.client.tls.key-password}
#eureka.client.tls.trust-store-type=${server.ssl.key-store-type}

# Configuration Security
##########################
security.jwt.access.tokenKey=MyFakeSecretKey

security.oauth2.resource.user-info-uri=http://localhost:9999/oauth2/userinfo
module.oauth2.trust-all-certs=true
module.oauth2.check-token-uri=http://localhost:9999/oauth2/check_token

# Configuration EMail
##########################
mail.smtp.host=localhost
mail.smtp.port=1025
mail.from=mock@mock.fr

email.urlServer=http://localhost:8080
email.urlContact=http://localhost:8080/contact
email.teamName=Team RUDI
email.projectName=${email.teamName}

# Configuration Freemarker
##########################
# Conf locale de surcharge des templates de mail pour les devs (un repertoire quelque part sur la machine)
# bien mettre les mail dans un dossier "templates/lemail.txt"
#freemarker.baseDirectory=/opt/rudi_tmp

# Configuration Captcha
##########################
rudi.captcha.enabled=false
rudi.captcha.client-id=NotUsedOnLocalhost
rudi.captcha.client-secret=NotUsedOnLocalhost
rudi.captcha.client-name=NotUsedOnLocalhost
