server.port=8092

spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=reactive

# Configuration BDD 
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=apigateway
spring.datasource.password=apigateway
spring.jpa.show-sql=true

# Génération du script par hibernate + jpa
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none
# Décommenter les lignes suivantes pour générer le fichier create_all_tables.sql à partir de toutes les Entity du projet
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=../rudi-microservice-apigateway-service/src/main/resources/bdd/create_all_tables.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# Configuration Eureka
##########################
eureka.client.serviceURL.defaultZone=http://admin:4dM1nApp!@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost

security.jwt.access.tokenKey=901c990dd69fb05617ccbbae01e73053da60099bb5a759e2286c40471af275eb9c55bc54cb4213db3ca29f528586b862251385f78052439c01fe22268e421b60

# Configuration Security 
##########################
module.oauth2.provider-uri=http://localhost:8085/oauth/token
module.oauth2.check-token-uri=http://localhost:8085/oauth/check_token
module.oauth2.client-id=apigateway
module.oauth2.client-secret=rudi@123
module.oauth2.scope=read,write

# Configuration Dataverse
##########################
dataverse.api.url=http://dv.open-dev.com:8095/api
dataverse.api.token=1ba617ce-1c7f-423b-ba9e-75f63d5c36a2

# Configuration Encryption
##########################
encryption-key.implementation=jks
