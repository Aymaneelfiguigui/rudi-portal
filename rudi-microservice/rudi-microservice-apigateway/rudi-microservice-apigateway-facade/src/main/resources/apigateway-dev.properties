# --- Server ---
server.port=8088
server.ssl.enabled=false
trust.trust-all-certs=true

# --- Dev basic auth to log into the portal (adjust) ---
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMINISTRATOR

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
eureka.instance.nonSecurePortEnabled=true
eureka.instance.securePortEnabled=false


# --- Database (Postgres container is mapped 5433->5432) ---
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi

spring.datasource.username=apigateway
spring.datasource.password=apigateway
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=none

# # --- Eureka (disable if you don't run a registry) ---
# eureka.client.enabled=true
# eureka.instance.nonSecurePortEnabled=true
# eureka.instance.securePortEnabled=false

security.jwt.access.tokenKey=dev-ultra-long-hs512-secret-0123456789abcdef-0123456789abcdef-0123456789abcdef-0123456789abcdef

# --- OAuth2 (point to your provider later; for now keep placeholder) ---
module.oauth2.trust-all-certs=true
module.oauth2.provider-uri=http://localhost:8085/oauth2/token
module.oauth2.check-token-uri=http://localhost:8085/oauth2/check_token
module.oauth2.client-id=apigateway
module.oauth2.client-secret=rudi@123
module.oauth2.scope=read,write
spring.main.allow-bean-definition-overriding=true

#Flyway ON, and let Hibernate use the right schema by default
spring.flyway.enabled=true
spring.jpa.properties.hibernate.default_schema=apigateway_data
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
# --- Dataverse ---
dataverse.host=http://147.210.218.43:8095
dataverse.api.url=${dataverse.host}/api
dataverse.api.token=82f6ba2f-1373-474d-b5e0-33c14460ee8b


# --- Encryption (leave as-is unless you set up JKS) ---
encryption-key.implementation=jks
rudi.apigateway.security.authentication.disabled=true


spring.main.web-application-type=reactive

