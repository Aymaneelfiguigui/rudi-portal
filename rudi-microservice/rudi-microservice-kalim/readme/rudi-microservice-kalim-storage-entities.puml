@startuml

abstract class org.rudi.common.storage.entity.AbstractLabelizedEntity <<MappedSuperclass>>  {
	{field} {static} +CODE_COLUMN_LENGTH : int
	{field} {static} +CODE_COLUMN_NAME : String
	{field} +@Column("code") code : String
	{field} +@Column("label") label : String
	{field} {static} -serialVersionUID : long
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}


abstract class org.rudi.common.storage.entity.AbstractLongIdEntity <<MappedSuperclass>>  {
	{field} +@Column("id") @Id id : Long
	{field} {static} -serialVersionUID : long
	{field} +@Column("uuid") uuid : java.util.UUID
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}


abstract class org.rudi.common.storage.entity.AbstractLongIdEntity$AbstractLongIdEntityBuilder {
	{field} -id : Long
	{field} -uuid : java.util.UUID
	{method}  {abstract} +build () : org.rudi.common.storage.entity.AbstractLongIdEntity
	{method} +id ( paramLong1 : Long ) : org.rudi.common.storage.entity.AbstractLongIdEntity$AbstractLongIdEntityBuilder
	{method}  {abstract} #self () : org.rudi.common.storage.entity.AbstractLongIdEntity$AbstractLongIdEntityBuilder
	{method} +toString () : String
	{method} +uuid ( paramUUID1 : java.util.UUID ) : org.rudi.common.storage.entity.AbstractLongIdEntity$AbstractLongIdEntityBuilder
}


abstract class org.rudi.common.storage.entity.AbstractStampedEntity <<MappedSuperclass>>  {
	{field} +@Column("closing_date") closingDate : java.time.LocalDateTime
	{field} +@Column("opening_date") openingDate : java.time.LocalDateTime
	{field} +@Column("order_") order : int
	{field} {static} -serialVersionUID : long
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}


abstract class org.rudi.common.storage.entity.AbstractTranslationEntity <<MappedSuperclass>>  {
	{field} +@Column("lang") lang : String
	{field} {static} -serialVersionUID : long
	{field} +@Column("text") text : String
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}


class org.rudi.common.storage.entity.HibernateEntityHelper {
	{method}  {static} +setCollection ( paramSupplier1 : java.util.function.Supplier , paramCollection2 : java.util.Collection ) : void
}


interface org.rudi.common.storage.entity.PositionedStatus {
	{method}  {abstract} +isFinal () : boolean
	{method}  {abstract} +isInitial () : boolean
}


class org.rudi.common.storage.entity.SkosConceptCodeColumn {
	{field} {static} +LENGTH : int
	{field} {static} +NAME : String
	{field} {static} +TABLE_NAME : String
}


enum org.rudi.common.storage.entity.StatusPosition {
	{field} +FINAL
	{field} +INITIAL
	{field} +INTERMEDIATE
}


class org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity <<Entity>>  <<Table>>  {
 {TableName=integration_request}
 {TableSchema=kalim_data}
--
	{field} +@Column("file") file : String
	{field} +@Column("global_id") globalId : java.util.UUID
	{field} +@Column("integration_status") integrationStatus : org.rudi.microservice.kalim.core.bean.IntegrationStatus
	{field} +@Column("method") method : org.rudi.microservice.kalim.core.bean.Method
	{field} +@Column("node_provider_id") nodeProviderId : java.util.UUID
	{field} +@Column("progress_status") progressStatus : org.rudi.microservice.kalim.core.bean.ProgressStatus
	{field} +@Column("rapport_transmission_attempts") rapportTransmissionAttempts : int
	{field} +@Column("resource_title") resourceTitle : String
	{field} +@Column("send_request_date") sendRequestDate : java.time.LocalDateTime
	{field} {static} -serialVersionUID : long
	{field} +@Column("submission_date") submissionDate : java.time.LocalDateTime
	{field} +@Column("submitted_by_harvesting") submittedByHarvesting : boolean
	{field} +@Column("treatment_date") treatmentDate : java.time.LocalDateTime
	{field} +@Column("version") version : String
	{method}  {static} -$default$rapportTransmissionAttempts () : int
	{method}  {static} +builder () : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}


abstract class org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder {
	{field} -file : String
	{field} -globalId : java.util.UUID
	{field} -integrationStatus : org.rudi.microservice.kalim.core.bean.IntegrationStatus
	{field} -method : org.rudi.microservice.kalim.core.bean.Method
	{field} -nodeProviderId : java.util.UUID
	{field} -progressStatus : org.rudi.microservice.kalim.core.bean.ProgressStatus
	{field} -rapportTransmissionAttempts$set : boolean
	{field} -rapportTransmissionAttempts$value : int
	{field} -resourceTitle : String
	{field} -sendRequestDate : java.time.LocalDateTime
	{field} -submissionDate : java.time.LocalDateTime
	{field} -submittedByHarvesting : boolean
	{field} -treatmentDate : java.time.LocalDateTime
	{field} -version : String
	{method}  {abstract} +build () : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity
	{method} +errors ( paramSet1 : java.util.Set ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +file ( paramString1 : String ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +globalId ( paramUUID1 : java.util.UUID ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +integrationStatus ( paramIntegrationStatus1 : org.rudi.microservice.kalim.core.bean.IntegrationStatus ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +method ( paramMethod1 : org.rudi.microservice.kalim.core.bean.Method ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +nodeProviderId ( paramUUID1 : java.util.UUID ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +progressStatus ( paramProgressStatus1 : org.rudi.microservice.kalim.core.bean.ProgressStatus ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +rapportTransmissionAttempts ( paramint1 : int ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +resourceTitle ( paramString1 : String ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method}  {abstract} #self () : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +sendRequestDate ( paramLocalDateTime1 : java.time.LocalDateTime ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +submissionDate ( paramLocalDateTime1 : java.time.LocalDateTime ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +submittedByHarvesting ( paramboolean1 : boolean ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +toString () : String
	{method} +treatmentDate ( paramLocalDateTime1 : java.time.LocalDateTime ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
	{method} +version ( paramString1 : String ) : org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder
}


class org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestErrorEntity <<Entity>>  <<Table>>  {
 {TableName=integration_request_error}
 {TableSchema=kalim_data}
--
	{field} +@Column("code") code : String
	{field} +@Column("error_date") errorDate : java.time.LocalDateTime
	{field} +@Column("field_name") fieldName : String
	{field} +@Column("message") message : String
	{field} {static} -serialVersionUID : long
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +toString () : String
}




org.rudi.common.storage.entity.AbstractLabelizedEntity --|>  org.rudi.common.storage.entity.AbstractLongIdEntity
org.rudi.common.storage.entity.AbstractStampedEntity --|>  org.rudi.common.storage.entity.AbstractLabelizedEntity
org.rudi.common.storage.entity.AbstractTranslationEntity --|>  org.rudi.common.storage.entity.AbstractLongIdEntity
org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity "1" o-- "0..*"  org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestErrorEntity :  @OneToMany\nerrors
org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity --|>  org.rudi.common.storage.entity.AbstractLongIdEntity
org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder "1" o-- "0..*"  org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestErrorEntity : errors
org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestEntity$IntegrationRequestEntityBuilder --|>  org.rudi.common.storage.entity.AbstractLongIdEntity$AbstractLongIdEntityBuilder
org.rudi.microservice.kalim.storage.entity.integration.IntegrationRequestErrorEntity --|>  org.rudi.common.storage.entity.AbstractLongIdEntity

hide methods

@enduml