# Surcharger les paramètres de "genius.properties"
server.port=8091

# Configuration BDD 
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=...
spring.datasource.password=...
spring.jpa.show-sql=true

# Génération du script par hibernate + jpa
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none
# Décommenter les lignes suivantes pour générer le fichier create_all_tables.sql à partir de toutes les @Entity du projet
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=../rudi-microservice-konsent-service/src/main/resources/bdd/create_all_tables.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

eureka.client.serviceURL.defaultZone=http://...:...@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost

security.jwt.access.tokenKey=...
# Rudi OAuth2
module.oauth2.provider-uri=http://acl:8085/oauth/token
module.oauth2.scope=read,write
module.oauth2.client-id=konsent
module.oauth2.client-secret=rudi@123
module.oauth2.check-token-uri=http://localhost:8085/oauth/check_token

# Signature + Conversion to PDFA
rudi.pdf.sign.keyStorePath=keystore/rudi-consent.jks
rudi.pdf.sign.keyStorePassword=rudiconsent
rudi.pdf.sign.keyStoreKeyAlias=rudi-consent
rudi.pdf.sign.keyStoreKeyPassword=rudiconsent
rudi.pdf.ghostscriptEnabled=true
rudi.pdf.sign.debug=true

freemarker.baseDirectory=/opt/rudi_tmp
freemarker.basePackage=templates

# SHA validation
rudi.consent.validate.sha.salt=...
rudi.consent.revoke.sha.salt=...
rudi.treatmentversion.publish.sha.salt=...