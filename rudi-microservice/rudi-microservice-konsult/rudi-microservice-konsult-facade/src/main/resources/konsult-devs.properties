# Surcharger les paramètres de "genius.properties"
server.port=8087

server.ssl.enabled=true
server.ssl.key-alias=localhost-certificate
server.ssl.key-store-password=rudissl
server.ssl.key-password=rudissl
server.ssl.key-store=classpath:keystore/rudi-https-certificate.jks
server.ssl.key-store-type=PKCS12
#trust.store=classpath:keystore/rudi-https-certificate.jks
#trust.store.password=rudissl
trust.trust-all-certs=true

# Configuration BDD 
#spring.datasource.url=jdbc:postgresql://localhost:5432/konsult
#spring.datasource.username=konsult
#spring.datasource.password=konsult
#spring.jpa.show-sql=true

# G?n?ration du script par hibernate + jpa
spring.flyway.enabled=false
spring.jpa.hibernate.ddl-auto=none

eureka.client.serviceURL.defaultZone=https://admin:4dM1nApp!@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost
eureka.instance.nonSecurePortEnabled=false
eureka.instance.securePortEnabled=true

eureka.client.tls.enabled=${server.ssl.enabled}
eureka.client.tls.key-store=${server.ssl.key-store}
eureka.client.tls.key-store-type=${server.ssl.key-store-type}
eureka.client.tls.key-password=${server.ssl.key-password}
eureka.client.tls.key-store-password=${server.ssl.key-store-password}
eureka.client.tls.trust-store=${eureka.client.tls.key-store}
eureka.client.tls.trust-store-password=${eureka.client.tls.key-password}
eureka.client.tls.trust-store-type=${server.ssl.key-store-type}

security.jwt.access.tokenKey=901c990dd69fb05617ccbbae01e73053da60099bb5a759e2286c40471af275eb9c55bc54cb4213db3ca29f528586b862251385f78052439c01fe22268e421b60

# Dataverse
dataverse.api.url=http://dv.open-dev.com:${dataverse.instance1.port}/api
#dataverse.api.token=31dd996b-bcb6-4e29-b569-e73845e0056d
dataverse.api.token=1ba617ce-1c7f-423b-ba9e-75f63d5c36a2
#dataverse.api.url=http://dv.open-dev.com:${dataverse.instance2.port}/api
#dataverse.api.token=31dd996b-bcb6-4e29-b569-e73845e0056d
# dataverse Rudi (catalogue des jeux de données)
dataverse.api.rudi.data.alias=rudi_data
dataverse.api.rudi.archive.alias=rudi_archive

## Configuration API Manager
##########################
apimanager.trust-all-certs=true
apimanager.base-url=https://wso2.open-dev.com
apimanager.api.url=https://wso2.open-dev.com:9443/api/am
apimanager.api.admin.context=/admin/v1
apimanager.api.publisher.context=/publisher/v1
apimanager.api.store.context=/store/v1
apimanager.api.store.api.categories=RudiData
apimanager.api.store.application.default.name=rudi_application
apimanager.api.store.application.default.requestPolicy=Unlimited
apimanager.api.store.subscription.default.policy=Unlimited
apimanager.api.store.subscription.anonymous.policy=Bronze

apimanager.gateway.url=https://wso2.open-dev.com:8243

# paramètres d'authentification OAuth2 des users vers WSO2
apimanager.oauth2.client.admin.registration.client-id=lYIEBuZiVjPDcvbJzKgFHQPmJk8a
apimanager.oauth2.client.admin.registration.client-secret=zDeef8__2r058SRgoHMrveenQc0a
apimanager.oauth2.client.admin.registration.id=rest_api_admin
apimanager.oauth2.client.admin.registration.scopes=apim:admin
apimanager.oauth2.client.admin.username=admin
apimanager.oauth2.client.admin.password=admin
apimanager.oauth2.client.anonymous.username=anonymous
apimanager.oauth2.client.anonymous.password=anonymous
apimanager.oauth2.client.rudi.username=rudi
apimanager.oauth2.client.rudi.password=rudi@123

apimanager.oauth2.client.default.registration.scopes=apim:subscribe,apim:api_view,apim:api_create,apim:api_publish,apim:api_delete
apimanager.oauth2.client.provider.token-uri=https://wso2.open-dev.com:9443/oauth2/token

# Rudi OAuth2
module.oauth2.trust-all-certs=true
module.oauth2.check-token-uri=https://localhost:8085/oauth/check_token
module.oauth2.provider-uri=https://localhost:8085/oauth/token
module.oauth2.client-id=konsult
module.oauth2.client-secret=rudi@123
module.oauth2.scope=read,write

## répertoire temporaire
temporary.directory=${java.io.tmpdir}

# Logs de performance
logging.level.org.rudi.facet.dataverse.api.dataset=TRACE
logging.level.org.rudi.facet.kaccess.service.dataset.impl=TRACE

# Conditionner le cache WSO2 à utiliser
apimanager.oauth2.client.registration.internal=false
