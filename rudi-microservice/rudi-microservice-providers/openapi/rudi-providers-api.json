{
	"openapi": "3.0.0",
	"info": {
		"description": "API Public Providers Rudi",
		"version": "0.0.1",
		"title": "rudi-providers-api",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "ca.marchand@rennesmetropole.fr"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "/{basePath}",
			"description": "Rudi Providers API",
			"variables": {
				"basePath": {
					"default": "providers/v1"
				}
			}
		}
	],
	"tags": [
		{
			"name": "administration",
			"description": "Services d'administration"
		},
		{
			"name": "providers",
			"description": "Services Providers"
		},
		{
			"name": "miscellaneous",
			"description": "Services divers"
		}
	],
	"paths": {
		"/application-information": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Récupération de la version applicative",
				"description": "Récupération d'information sur la version de l'application",
				"operationId": "getApplicationInformation",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppInfo"
								}
							}
						}
					}
				}
			}
		},
		"/healthCheck": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Test de vie de l'application'",
				"description": "Test de vie de l'application",
				"operationId": "checkHealth",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/providers": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection de fournisseurs",
				"description": "Retourne une liste de fournisseurs",
				"operationId": "searchProviders",
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"description": "Tout ou partie d'un code de fournisseur",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "libelle",
						"description": "Tout ou partie d'un libellé de fournisseur",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateDebut",
						"description": "Date de debut d'activité",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "dateFin",
						"description": "Date de fin d'activité",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "nodeProviderUuid",
						"description": "UUID d'un nom fournisseur",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "full",
						"description": "Permet d'indiquer si l'on souhaite récupérer les noeuds et les adresses",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"description": "liste des tris à réaliser. Exemple :  code,-libelle"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/ProviderPageResult"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'un nouveau fournisseur",
				"description": "Permet d'ajouter un nouveau fournisseur",
				"operationId": "createProvider",
				"requestBody": {
					"description": "info fournisseur",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/Provider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'un fournisseur",
				"description": "Mise à jour d'un fournisseur",
				"operationId": "updateProvider",
				"requestBody": {
					"description": "info fournisseur",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/Provider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne un fournisseur",
				"description": "Retourne un fournisseur",
				"operationId": "getProvider",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid pour la récupération d'un element",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "full",
						"description": "Permet d'indiquer si l'on souhaite récupérer les noeuds et les adresses",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/Provider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un fournisseur",
				"description": "Suppression d'un fournisseur",
				"operationId": "deleteProvider",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "info uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/addresses": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection d'adresses",
				"description": "Collection d'adresses",
				"operationId": "getAddresses",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'une adresse",
				"description": "Ajout d'une adresse",
				"operationId": "createAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info address",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'une adresse",
				"description": "Mise à jour d'une adresse",
				"operationId": "updateAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "providerUuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info address",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/addresses/{addressUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne une adresse",
				"description": "Retourne une adresse",
				"operationId": "getAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressUuid",
						"in": "path",
						"description": "uuid to get address",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AbstractAddress"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'une adresse",
				"description": "Suppression d'une adresse",
				"operationId": "deleteAddress",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "addressUuid",
						"in": "path",
						"description": "uuid address",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/nodes": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection de noeuds",
				"description": "Retourne une collection de noeuds",
				"operationId": "getNodes",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'un noeud",
				"description": "Ajout d'un noeud",
				"operationId": "createNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info node",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'un noeud",
				"description": "Mise à jour d'un noeud",
				"operationId": "updateNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "info node",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/nodes/{nodeUuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne un noeud",
				"description": "Retourne un noeud",
				"operationId": "getNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "uuid node",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un noeud",
				"description": "Suppression d'un noeud",
				"operationId": "deleteNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "uuid provider",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "uuid noeud",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Le fournisseur est inconnu."
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"providers"
				],
				"summary": "Change la date du dernier moissonnage réussi du nœud fournisseur",
				"description": "Change la date du dernier moissonnage réussi du nœud fournisseur",
				"operationId": "patchNode",
				"parameters": [
					{
						"name": "providerUuid",
						"in": "path",
						"description": "UUID du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "nodeUuid",
						"in": "path",
						"description": "UUID du nœud fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "lastHarvestingDate",
						"in": "query",
						"description": "Date du dernier moissonnage réussi",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/RudiDate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/NodeProvider"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/providers/{providerUuid}/media/{kindOfData}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Téléchargement du média d'un fournisseur",
				"description": "Retourne le média du fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "downloadProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le logo du fournisseur",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout ou modification d'un média pour un fournisseur",
				"description": "Upload le média du fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "uploadProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						},
						"example": "LOGO"
					}
				],
				"requestBody": {
					"content": {
						"application/octet-stream": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le média du fournisseur a été créé ou mis à jour avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un média pour un fournisseur",
				"description": "Supprime le média d'un fournisseur, pour le type de média demandé (logo par exemple).",
				"operationId": "deleteProviderMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "providerUuid",
						"description": "Identifiant du fournisseur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"204": {
						"description": "Le média du fournisseur a été supprimé avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			}
		},
		"/producers/{producerUuid}/media/{kindOfData}": {
			"get": {
				"tags": [
					"producers"
				],
				"summary": "Téléchargement du média d'un producteur",
				"description": "Retourne le média du producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "downloadProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retourne le logo du producteur",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"producers"
				],
				"summary": "Ajout ou modification d'un média pour un producteur",
				"description": "Upload le média d'un producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "uploadProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						},
						"example": "LOGO"
					}
				],
				"requestBody": {
					"content": {
						"application/octet-stream": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Le média du producteur a été créé ou mis à jour avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			},
			"delete": {
				"tags": [
					"producers"
				],
				"summary": "Suppression d'un média pour un producteur",
				"description": "Supprime le média d'un producteur, pour le type de média demandé (logo par exemple).",
				"operationId": "deleteProducerMediaByType",
				"parameters": [
					{
						"in": "path",
						"name": "producerUuid",
						"description": "Identifiant du producteur",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5596b5b2-b227-4c74-a9a1-719e7c1008c7"
					},
					{
						"in": "path",
						"name": "kindOfData",
						"description": "Type de média",
						"required": true,
						"schema": {
							"$ref": "KindOfData"
						},
						"example": "LOGO"
					}
				],
				"responses": {
					"204": {
						"description": "Le média du producteur a été supprimé avec succès."
					},
					"400": {
						"description": "La requête est incorrecte et doit être corrigée avant de réessayer."
					},
					"500": {
						"description": "Erreur interne du serveur. Contacter un développeur pour avoir plus d'informations sur la cause de l'erreur."
					}
				}
			}
		},
		"/addressRoles": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Collection de role",
				"description": "Retourne une liste de role",
				"operationId": "searchAddressRoles",
				"parameters": [
					{
						"in": "query",
						"name": "active",
						"description": "Elements actif ou tous",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "type",
						"description": "Type du rôle",
						"required": false,
						"schema": {
							"$ref": "rudi-providers-model.json#/components/schemas/AddressType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"providers"
				],
				"summary": "Ajout d'un nouveau role",
				"description": "Permet d'ajouter un nouveau role",
				"operationId": "createAddressRole",
				"requestBody": {
					"description": "info role",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"providers"
				],
				"summary": "Mise à jour d'un role",
				"description": "Mise à jour d'un role",
				"operationId": "updateAddressRole",
				"requestBody": {
					"description": "info role",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/addressRoles/{uuid}": {
			"get": {
				"tags": [
					"providers"
				],
				"summary": "Retourne un role",
				"description": "Retourne un role",
				"operationId": "getAddressRole",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "uuid role",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-providers-model.json#/components/schemas/AddressRole"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"providers"
				],
				"summary": "Suppression d'un role",
				"description": "Suppression d'un role",
				"operationId": "deleteAddressRole",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"description": "uuid role",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ApiError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				}
			},
			"AppInfo": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Numéro de version de l'application"
					},
					"comment": {
						"type": "string",
						"description": "Description de la version de l'application"
					}
				}
			},
			"RudiDate": {
				"description": "Date in the ISO 8601 format",
				"type": "string",
				"format": "date-time"
			}
		}
	}
}
